// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: doublecloud/visualization/v1/workbook_service.proto

package visualization

import (
	v1 "github.com/doublecloud/go-genproto/doublecloud/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetWorkbookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkbookId string `protobuf:"bytes,1,opt,name=workbook_id,json=workbookId,proto3" json:"workbook_id,omitempty"`
}

func (x *GetWorkbookRequest) Reset() {
	*x = GetWorkbookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkbookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkbookRequest) ProtoMessage() {}

func (x *GetWorkbookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkbookRequest.ProtoReflect.Descriptor instead.
func (*GetWorkbookRequest) Descriptor() ([]byte, []int) {
	return file_doublecloud_visualization_v1_workbook_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetWorkbookRequest) GetWorkbookId() string {
	if x != nil {
		return x.WorkbookId
	}
	return ""
}

type GetWorkbookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Workbook config (only dashboards/charts/datasets)
	Workbook  *Workbook `protobuf:"bytes,1,opt,name=workbook,proto3" json:"workbook,omitempty"`
	Id        string    `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Title     string    `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	ProjectId string    `protobuf:"bytes,4,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *GetWorkbookResponse) Reset() {
	*x = GetWorkbookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkbookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkbookResponse) ProtoMessage() {}

func (x *GetWorkbookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkbookResponse.ProtoReflect.Descriptor instead.
func (*GetWorkbookResponse) Descriptor() ([]byte, []int) {
	return file_doublecloud_visualization_v1_workbook_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetWorkbookResponse) GetWorkbook() *Workbook {
	if x != nil {
		return x.Workbook
	}
	return nil
}

func (x *GetWorkbookResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetWorkbookResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetWorkbookResponse) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type CreateWorkbookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId     string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	WorkbookTitle string `protobuf:"bytes,2,opt,name=workbook_title,json=workbookTitle,proto3" json:"workbook_title,omitempty"`
}

func (x *CreateWorkbookRequest) Reset() {
	*x = CreateWorkbookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWorkbookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkbookRequest) ProtoMessage() {}

func (x *CreateWorkbookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkbookRequest.ProtoReflect.Descriptor instead.
func (*CreateWorkbookRequest) Descriptor() ([]byte, []int) {
	return file_doublecloud_visualization_v1_workbook_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateWorkbookRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreateWorkbookRequest) GetWorkbookTitle() string {
	if x != nil {
		return x.WorkbookTitle
	}
	return ""
}

type UpdateWorkbookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkbookId string `protobuf:"bytes,1,opt,name=workbook_id,json=workbookId,proto3" json:"workbook_id,omitempty"`
	// Workbook config (only dashboards/charts/datasets)
	Workbook     *Workbook             `protobuf:"bytes,2,opt,name=workbook,proto3" json:"workbook,omitempty"`
	ForceRewrite *wrapperspb.BoolValue `protobuf:"bytes,3,opt,name=force_rewrite,json=forceRewrite,proto3" json:"force_rewrite,omitempty"`
}

func (x *UpdateWorkbookRequest) Reset() {
	*x = UpdateWorkbookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWorkbookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkbookRequest) ProtoMessage() {}

func (x *UpdateWorkbookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkbookRequest.ProtoReflect.Descriptor instead.
func (*UpdateWorkbookRequest) Descriptor() ([]byte, []int) {
	return file_doublecloud_visualization_v1_workbook_service_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateWorkbookRequest) GetWorkbookId() string {
	if x != nil {
		return x.WorkbookId
	}
	return ""
}

func (x *UpdateWorkbookRequest) GetWorkbook() *Workbook {
	if x != nil {
		return x.Workbook
	}
	return nil
}

func (x *UpdateWorkbookRequest) GetForceRewrite() *wrapperspb.BoolValue {
	if x != nil {
		return x.ForceRewrite
	}
	return nil
}

type DeleteWorkbookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkbookId string `protobuf:"bytes,1,opt,name=workbook_id,json=workbookId,proto3" json:"workbook_id,omitempty"`
}

func (x *DeleteWorkbookRequest) Reset() {
	*x = DeleteWorkbookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWorkbookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWorkbookRequest) ProtoMessage() {}

func (x *DeleteWorkbookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWorkbookRequest.ProtoReflect.Descriptor instead.
func (*DeleteWorkbookRequest) Descriptor() ([]byte, []int) {
	return file_doublecloud_visualization_v1_workbook_service_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteWorkbookRequest) GetWorkbookId() string {
	if x != nil {
		return x.WorkbookId
	}
	return ""
}

type GetWorkbookConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkbookId     string `protobuf:"bytes,1,opt,name=workbook_id,json=workbookId,proto3" json:"workbook_id,omitempty"`
	ConnectionName string `protobuf:"bytes,2,opt,name=connection_name,json=connectionName,proto3" json:"connection_name,omitempty"`
}

func (x *GetWorkbookConnectionRequest) Reset() {
	*x = GetWorkbookConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkbookConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkbookConnectionRequest) ProtoMessage() {}

func (x *GetWorkbookConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkbookConnectionRequest.ProtoReflect.Descriptor instead.
func (*GetWorkbookConnectionRequest) Descriptor() ([]byte, []int) {
	return file_doublecloud_visualization_v1_workbook_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetWorkbookConnectionRequest) GetWorkbookId() string {
	if x != nil {
		return x.WorkbookId
	}
	return ""
}

func (x *GetWorkbookConnectionRequest) GetConnectionName() string {
	if x != nil {
		return x.ConnectionName
	}
	return ""
}

type GetWorkbookConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connection *Connection `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"`
}

func (x *GetWorkbookConnectionResponse) Reset() {
	*x = GetWorkbookConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkbookConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkbookConnectionResponse) ProtoMessage() {}

func (x *GetWorkbookConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkbookConnectionResponse.ProtoReflect.Descriptor instead.
func (*GetWorkbookConnectionResponse) Descriptor() ([]byte, []int) {
	return file_doublecloud_visualization_v1_workbook_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetWorkbookConnectionResponse) GetConnection() *Connection {
	if x != nil {
		return x.Connection
	}
	return nil
}

type CreateWorkbookConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkbookId     string `protobuf:"bytes,1,opt,name=workbook_id,json=workbookId,proto3" json:"workbook_id,omitempty"`
	ConnectionName string `protobuf:"bytes,2,opt,name=connection_name,json=connectionName,proto3" json:"connection_name,omitempty"`
	// Connection config
	Connection *Connection `protobuf:"bytes,3,opt,name=connection,proto3" json:"connection,omitempty"`
	Secret     *Secret     `protobuf:"bytes,4,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *CreateWorkbookConnectionRequest) Reset() {
	*x = CreateWorkbookConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWorkbookConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkbookConnectionRequest) ProtoMessage() {}

func (x *CreateWorkbookConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkbookConnectionRequest.ProtoReflect.Descriptor instead.
func (*CreateWorkbookConnectionRequest) Descriptor() ([]byte, []int) {
	return file_doublecloud_visualization_v1_workbook_service_proto_rawDescGZIP(), []int{7}
}

func (x *CreateWorkbookConnectionRequest) GetWorkbookId() string {
	if x != nil {
		return x.WorkbookId
	}
	return ""
}

func (x *CreateWorkbookConnectionRequest) GetConnectionName() string {
	if x != nil {
		return x.ConnectionName
	}
	return ""
}

func (x *CreateWorkbookConnectionRequest) GetConnection() *Connection {
	if x != nil {
		return x.Connection
	}
	return nil
}

func (x *CreateWorkbookConnectionRequest) GetSecret() *Secret {
	if x != nil {
		return x.Secret
	}
	return nil
}

type UpdateWorkbookConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkbookId     string      `protobuf:"bytes,1,opt,name=workbook_id,json=workbookId,proto3" json:"workbook_id,omitempty"`
	ConnectionName string      `protobuf:"bytes,2,opt,name=connection_name,json=connectionName,proto3" json:"connection_name,omitempty"`
	Connection     *Connection `protobuf:"bytes,3,opt,name=connection,proto3" json:"connection,omitempty"`
	Secret         *Secret     `protobuf:"bytes,4,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *UpdateWorkbookConnectionRequest) Reset() {
	*x = UpdateWorkbookConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWorkbookConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkbookConnectionRequest) ProtoMessage() {}

func (x *UpdateWorkbookConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkbookConnectionRequest.ProtoReflect.Descriptor instead.
func (*UpdateWorkbookConnectionRequest) Descriptor() ([]byte, []int) {
	return file_doublecloud_visualization_v1_workbook_service_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateWorkbookConnectionRequest) GetWorkbookId() string {
	if x != nil {
		return x.WorkbookId
	}
	return ""
}

func (x *UpdateWorkbookConnectionRequest) GetConnectionName() string {
	if x != nil {
		return x.ConnectionName
	}
	return ""
}

func (x *UpdateWorkbookConnectionRequest) GetConnection() *Connection {
	if x != nil {
		return x.Connection
	}
	return nil
}

func (x *UpdateWorkbookConnectionRequest) GetSecret() *Secret {
	if x != nil {
		return x.Secret
	}
	return nil
}

type DeleteWorkbookConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkbookId     string `protobuf:"bytes,1,opt,name=workbook_id,json=workbookId,proto3" json:"workbook_id,omitempty"`
	ConnectionName string `protobuf:"bytes,2,opt,name=connection_name,json=connectionName,proto3" json:"connection_name,omitempty"`
}

func (x *DeleteWorkbookConnectionRequest) Reset() {
	*x = DeleteWorkbookConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWorkbookConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWorkbookConnectionRequest) ProtoMessage() {}

func (x *DeleteWorkbookConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWorkbookConnectionRequest.ProtoReflect.Descriptor instead.
func (*DeleteWorkbookConnectionRequest) Descriptor() ([]byte, []int) {
	return file_doublecloud_visualization_v1_workbook_service_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteWorkbookConnectionRequest) GetWorkbookId() string {
	if x != nil {
		return x.WorkbookId
	}
	return ""
}

func (x *DeleteWorkbookConnectionRequest) GetConnectionName() string {
	if x != nil {
		return x.ConnectionName
	}
	return ""
}

type AdviseDatasetFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkbookId     string `protobuf:"bytes,1,opt,name=workbook_id,json=workbookId,proto3" json:"workbook_id,omitempty"`
	ConnectionName string `protobuf:"bytes,2,opt,name=connection_name,json=connectionName,proto3" json:"connection_name,omitempty"`
	// Dataset without fields
	PartialDataset *Dataset `protobuf:"bytes,3,opt,name=partial_dataset,json=partialDataset,proto3" json:"partial_dataset,omitempty"`
}

func (x *AdviseDatasetFieldsRequest) Reset() {
	*x = AdviseDatasetFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdviseDatasetFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdviseDatasetFieldsRequest) ProtoMessage() {}

func (x *AdviseDatasetFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdviseDatasetFieldsRequest.ProtoReflect.Descriptor instead.
func (*AdviseDatasetFieldsRequest) Descriptor() ([]byte, []int) {
	return file_doublecloud_visualization_v1_workbook_service_proto_rawDescGZIP(), []int{10}
}

func (x *AdviseDatasetFieldsRequest) GetWorkbookId() string {
	if x != nil {
		return x.WorkbookId
	}
	return ""
}

func (x *AdviseDatasetFieldsRequest) GetConnectionName() string {
	if x != nil {
		return x.ConnectionName
	}
	return ""
}

func (x *AdviseDatasetFieldsRequest) GetPartialDataset() *Dataset {
	if x != nil {
		return x.PartialDataset
	}
	return nil
}

type AdviseDatasetFieldsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Dataset (with all direct fields & filled defaults)
	Dataset *Dataset `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
}

func (x *AdviseDatasetFieldsResponse) Reset() {
	*x = AdviseDatasetFieldsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdviseDatasetFieldsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdviseDatasetFieldsResponse) ProtoMessage() {}

func (x *AdviseDatasetFieldsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdviseDatasetFieldsResponse.ProtoReflect.Descriptor instead.
func (*AdviseDatasetFieldsResponse) Descriptor() ([]byte, []int) {
	return file_doublecloud_visualization_v1_workbook_service_proto_rawDescGZIP(), []int{11}
}

func (x *AdviseDatasetFieldsResponse) GetDataset() *Dataset {
	if x != nil {
		return x.Dataset
	}
	return nil
}

type ListWorkbooksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *ListWorkbooksRequest) Reset() {
	*x = ListWorkbooksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkbooksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkbooksRequest) ProtoMessage() {}

func (x *ListWorkbooksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkbooksRequest.ProtoReflect.Descriptor instead.
func (*ListWorkbooksRequest) Descriptor() ([]byte, []int) {
	return file_doublecloud_visualization_v1_workbook_service_proto_rawDescGZIP(), []int{12}
}

func (x *ListWorkbooksRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type ListWorkbooksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workbooks []*WorkbooksIndexItem `protobuf:"bytes,1,rep,name=workbooks,proto3" json:"workbooks,omitempty"`
}

func (x *ListWorkbooksResponse) Reset() {
	*x = ListWorkbooksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkbooksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkbooksResponse) ProtoMessage() {}

func (x *ListWorkbooksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkbooksResponse.ProtoReflect.Descriptor instead.
func (*ListWorkbooksResponse) Descriptor() ([]byte, []int) {
	return file_doublecloud_visualization_v1_workbook_service_proto_rawDescGZIP(), []int{13}
}

func (x *ListWorkbooksResponse) GetWorkbooks() []*WorkbooksIndexItem {
	if x != nil {
		return x.Workbooks
	}
	return nil
}

var File_doublecloud_visualization_v1_workbook_service_proto protoreflect.FileDescriptor

var file_doublecloud_visualization_v1_workbook_service_proto_rawDesc = []byte{
	0x0a, 0x33, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x76, 0x69,
	0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x77,
	0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2f, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76,
	0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x35, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x6f,
	0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72,
	0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x22, 0x9e, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x57,
	0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x42, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x62,
	0x6f, 0x6f, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x6f,
	0x6f, 0x6b, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b,
	0x49, 0x64, 0x12, 0x42, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x08, 0x77, 0x6f,
	0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x3f, 0x0a, 0x0d, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f,
	0x72, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x22, 0x38, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x49,
	0x64, 0x22, 0x68, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b,
	0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x69, 0x0a, 0x1d, 0x47,
	0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0a,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76,
	0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf3, 0x01, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f,
	0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c,
	0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x69, 0x73,
	0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0xf3, 0x01, 0x0a,
	0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x49,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x0a, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x69, 0x73,
	0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x22, 0x6b, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b,
	0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b,
	0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0xb6, 0x01, 0x0a, 0x1a, 0x41, 0x64, 0x76, 0x69, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4e, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x22, 0x5e, 0x0a, 0x1b, 0x41, 0x64, 0x76, 0x69,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52,
	0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x22, 0x35, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74,
	0x57, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22,
	0x67, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b,
	0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x64, 0x6f,
	0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x62,
	0x6f, 0x6f, 0x6b, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x77,
	0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x32, 0xe7, 0x08, 0x0a, 0x0f, 0x57, 0x6f, 0x72,
	0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6a, 0x0a, 0x03,
	0x47, 0x65, 0x74, 0x12, 0x30, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x33, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x58, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x33, 0x2e, 0x64,
	0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61,
	0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x58, 0x0a, 0x06,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x33, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b,
	0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x64, 0x6f,
	0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x88, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x62,
	0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6c, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x62,
	0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x6c, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f,
	0x6b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6c, 0x0a,
	0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x3d, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x8a, 0x01, 0x0a, 0x13,
	0x41, 0x64, 0x76, 0x69, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x12, 0x38, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x69, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e,
	0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x69, 0x73, 0x75,
	0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76,
	0x69, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x78, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74,
	0x57, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x32, 0x2e, 0x64, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72,
	0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e,
	0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x69, 0x73, 0x75,
	0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x4f, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2d,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_doublecloud_visualization_v1_workbook_service_proto_rawDescOnce sync.Once
	file_doublecloud_visualization_v1_workbook_service_proto_rawDescData = file_doublecloud_visualization_v1_workbook_service_proto_rawDesc
)

func file_doublecloud_visualization_v1_workbook_service_proto_rawDescGZIP() []byte {
	file_doublecloud_visualization_v1_workbook_service_proto_rawDescOnce.Do(func() {
		file_doublecloud_visualization_v1_workbook_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_doublecloud_visualization_v1_workbook_service_proto_rawDescData)
	})
	return file_doublecloud_visualization_v1_workbook_service_proto_rawDescData
}

var file_doublecloud_visualization_v1_workbook_service_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_doublecloud_visualization_v1_workbook_service_proto_goTypes = []interface{}{
	(*GetWorkbookRequest)(nil),              // 0: doublecloud.visualization.v1.GetWorkbookRequest
	(*GetWorkbookResponse)(nil),             // 1: doublecloud.visualization.v1.GetWorkbookResponse
	(*CreateWorkbookRequest)(nil),           // 2: doublecloud.visualization.v1.CreateWorkbookRequest
	(*UpdateWorkbookRequest)(nil),           // 3: doublecloud.visualization.v1.UpdateWorkbookRequest
	(*DeleteWorkbookRequest)(nil),           // 4: doublecloud.visualization.v1.DeleteWorkbookRequest
	(*GetWorkbookConnectionRequest)(nil),    // 5: doublecloud.visualization.v1.GetWorkbookConnectionRequest
	(*GetWorkbookConnectionResponse)(nil),   // 6: doublecloud.visualization.v1.GetWorkbookConnectionResponse
	(*CreateWorkbookConnectionRequest)(nil), // 7: doublecloud.visualization.v1.CreateWorkbookConnectionRequest
	(*UpdateWorkbookConnectionRequest)(nil), // 8: doublecloud.visualization.v1.UpdateWorkbookConnectionRequest
	(*DeleteWorkbookConnectionRequest)(nil), // 9: doublecloud.visualization.v1.DeleteWorkbookConnectionRequest
	(*AdviseDatasetFieldsRequest)(nil),      // 10: doublecloud.visualization.v1.AdviseDatasetFieldsRequest
	(*AdviseDatasetFieldsResponse)(nil),     // 11: doublecloud.visualization.v1.AdviseDatasetFieldsResponse
	(*ListWorkbooksRequest)(nil),            // 12: doublecloud.visualization.v1.ListWorkbooksRequest
	(*ListWorkbooksResponse)(nil),           // 13: doublecloud.visualization.v1.ListWorkbooksResponse
	(*Workbook)(nil),                        // 14: doublecloud.visualization.v1.Workbook
	(*wrapperspb.BoolValue)(nil),            // 15: google.protobuf.BoolValue
	(*Connection)(nil),                      // 16: doublecloud.visualization.v1.Connection
	(*Secret)(nil),                          // 17: doublecloud.visualization.v1.Secret
	(*Dataset)(nil),                         // 18: doublecloud.visualization.v1.Dataset
	(*WorkbooksIndexItem)(nil),              // 19: doublecloud.visualization.v1.WorkbooksIndexItem
	(*v1.Operation)(nil),                    // 20: doublecloud.v1.Operation
}
var file_doublecloud_visualization_v1_workbook_service_proto_depIdxs = []int32{
	14, // 0: doublecloud.visualization.v1.GetWorkbookResponse.workbook:type_name -> doublecloud.visualization.v1.Workbook
	14, // 1: doublecloud.visualization.v1.UpdateWorkbookRequest.workbook:type_name -> doublecloud.visualization.v1.Workbook
	15, // 2: doublecloud.visualization.v1.UpdateWorkbookRequest.force_rewrite:type_name -> google.protobuf.BoolValue
	16, // 3: doublecloud.visualization.v1.GetWorkbookConnectionResponse.connection:type_name -> doublecloud.visualization.v1.Connection
	16, // 4: doublecloud.visualization.v1.CreateWorkbookConnectionRequest.connection:type_name -> doublecloud.visualization.v1.Connection
	17, // 5: doublecloud.visualization.v1.CreateWorkbookConnectionRequest.secret:type_name -> doublecloud.visualization.v1.Secret
	16, // 6: doublecloud.visualization.v1.UpdateWorkbookConnectionRequest.connection:type_name -> doublecloud.visualization.v1.Connection
	17, // 7: doublecloud.visualization.v1.UpdateWorkbookConnectionRequest.secret:type_name -> doublecloud.visualization.v1.Secret
	18, // 8: doublecloud.visualization.v1.AdviseDatasetFieldsRequest.partial_dataset:type_name -> doublecloud.visualization.v1.Dataset
	18, // 9: doublecloud.visualization.v1.AdviseDatasetFieldsResponse.dataset:type_name -> doublecloud.visualization.v1.Dataset
	19, // 10: doublecloud.visualization.v1.ListWorkbooksResponse.workbooks:type_name -> doublecloud.visualization.v1.WorkbooksIndexItem
	0,  // 11: doublecloud.visualization.v1.WorkbookService.Get:input_type -> doublecloud.visualization.v1.GetWorkbookRequest
	2,  // 12: doublecloud.visualization.v1.WorkbookService.Create:input_type -> doublecloud.visualization.v1.CreateWorkbookRequest
	3,  // 13: doublecloud.visualization.v1.WorkbookService.Update:input_type -> doublecloud.visualization.v1.UpdateWorkbookRequest
	4,  // 14: doublecloud.visualization.v1.WorkbookService.Delete:input_type -> doublecloud.visualization.v1.DeleteWorkbookRequest
	5,  // 15: doublecloud.visualization.v1.WorkbookService.GetConnection:input_type -> doublecloud.visualization.v1.GetWorkbookConnectionRequest
	7,  // 16: doublecloud.visualization.v1.WorkbookService.CreateConnection:input_type -> doublecloud.visualization.v1.CreateWorkbookConnectionRequest
	8,  // 17: doublecloud.visualization.v1.WorkbookService.UpdateConnection:input_type -> doublecloud.visualization.v1.UpdateWorkbookConnectionRequest
	9,  // 18: doublecloud.visualization.v1.WorkbookService.DeleteConnection:input_type -> doublecloud.visualization.v1.DeleteWorkbookConnectionRequest
	10, // 19: doublecloud.visualization.v1.WorkbookService.AdviseDatasetFields:input_type -> doublecloud.visualization.v1.AdviseDatasetFieldsRequest
	12, // 20: doublecloud.visualization.v1.WorkbookService.ListWorkbooks:input_type -> doublecloud.visualization.v1.ListWorkbooksRequest
	1,  // 21: doublecloud.visualization.v1.WorkbookService.Get:output_type -> doublecloud.visualization.v1.GetWorkbookResponse
	20, // 22: doublecloud.visualization.v1.WorkbookService.Create:output_type -> doublecloud.v1.Operation
	20, // 23: doublecloud.visualization.v1.WorkbookService.Update:output_type -> doublecloud.v1.Operation
	20, // 24: doublecloud.visualization.v1.WorkbookService.Delete:output_type -> doublecloud.v1.Operation
	6,  // 25: doublecloud.visualization.v1.WorkbookService.GetConnection:output_type -> doublecloud.visualization.v1.GetWorkbookConnectionResponse
	20, // 26: doublecloud.visualization.v1.WorkbookService.CreateConnection:output_type -> doublecloud.v1.Operation
	20, // 27: doublecloud.visualization.v1.WorkbookService.UpdateConnection:output_type -> doublecloud.v1.Operation
	20, // 28: doublecloud.visualization.v1.WorkbookService.DeleteConnection:output_type -> doublecloud.v1.Operation
	11, // 29: doublecloud.visualization.v1.WorkbookService.AdviseDatasetFields:output_type -> doublecloud.visualization.v1.AdviseDatasetFieldsResponse
	13, // 30: doublecloud.visualization.v1.WorkbookService.ListWorkbooks:output_type -> doublecloud.visualization.v1.ListWorkbooksResponse
	21, // [21:31] is the sub-list for method output_type
	11, // [11:21] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_doublecloud_visualization_v1_workbook_service_proto_init() }
func file_doublecloud_visualization_v1_workbook_service_proto_init() {
	if File_doublecloud_visualization_v1_workbook_service_proto != nil {
		return
	}
	file_doublecloud_visualization_v1_workbook_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkbookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkbookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWorkbookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWorkbookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWorkbookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkbookConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkbookConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWorkbookConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWorkbookConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWorkbookConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdviseDatasetFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdviseDatasetFieldsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkbooksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_visualization_v1_workbook_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkbooksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_doublecloud_visualization_v1_workbook_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_doublecloud_visualization_v1_workbook_service_proto_goTypes,
		DependencyIndexes: file_doublecloud_visualization_v1_workbook_service_proto_depIdxs,
		MessageInfos:      file_doublecloud_visualization_v1_workbook_service_proto_msgTypes,
	}.Build()
	File_doublecloud_visualization_v1_workbook_service_proto = out.File
	file_doublecloud_visualization_v1_workbook_service_proto_rawDesc = nil
	file_doublecloud_visualization_v1_workbook_service_proto_goTypes = nil
	file_doublecloud_visualization_v1_workbook_service_proto_depIdxs = nil
}
