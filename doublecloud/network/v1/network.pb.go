// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: doublecloud/network/v1/network.proto

package network

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Network_NetworkStatus int32

const (
	Network_NETWORK_STATUS_INVALID  Network_NetworkStatus = 0
	Network_NETWORK_STATUS_CREATING Network_NetworkStatus = 1
	Network_NETWORK_STATUS_ACTIVE   Network_NetworkStatus = 2
	Network_NETWORK_STATUS_DELETING Network_NetworkStatus = 3
	Network_NETWORK_STATUS_ERROR    Network_NetworkStatus = 4
)

// Enum value maps for Network_NetworkStatus.
var (
	Network_NetworkStatus_name = map[int32]string{
		0: "NETWORK_STATUS_INVALID",
		1: "NETWORK_STATUS_CREATING",
		2: "NETWORK_STATUS_ACTIVE",
		3: "NETWORK_STATUS_DELETING",
		4: "NETWORK_STATUS_ERROR",
	}
	Network_NetworkStatus_value = map[string]int32{
		"NETWORK_STATUS_INVALID":  0,
		"NETWORK_STATUS_CREATING": 1,
		"NETWORK_STATUS_ACTIVE":   2,
		"NETWORK_STATUS_DELETING": 3,
		"NETWORK_STATUS_ERROR":    4,
	}
)

func (x Network_NetworkStatus) Enum() *Network_NetworkStatus {
	p := new(Network_NetworkStatus)
	*p = x
	return p
}

func (x Network_NetworkStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Network_NetworkStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_doublecloud_network_v1_network_proto_enumTypes[0].Descriptor()
}

func (Network_NetworkStatus) Type() protoreflect.EnumType {
	return &file_doublecloud_network_v1_network_proto_enumTypes[0]
}

func (x Network_NetworkStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Network_NetworkStatus.Descriptor instead.
func (Network_NetworkStatus) EnumDescriptor() ([]byte, []int) {
	return file_doublecloud_network_v1_network_proto_rawDescGZIP(), []int{0, 0}
}

// A VPC network resource.
type Network struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the network.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ID of the project that the network belongs to.
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// Type of the cloud provider.
	CloudType string `protobuf:"bytes,3,opt,name=cloud_type,json=cloudType,proto3" json:"cloud_type,omitempty"`
	// ID of the region.
	RegionId string `protobuf:"bytes,4,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	// Creation timestamp.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Name of the network.
	// The name is unique within the project.
	Name string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the network.
	Description string `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	// The IPv4 network range for the subnet, in CIDR notation.
	// For example, 10.0.0.0/16.
	Ipv4CidrBlock string `protobuf:"bytes,8,opt,name=ipv4_cidr_block,json=ipv4CidrBlock,proto3" json:"ipv4_cidr_block,omitempty"`
	// The IPv6 network range for the subnet, in CIDR notation.
	// For example, 2a05:d014:463:1800::/56.
	Ipv6CidrBlock string `protobuf:"bytes,9,opt,name=ipv6_cidr_block,json=ipv6CidrBlock,proto3" json:"ipv6_cidr_block,omitempty"`
	// Current state of the network.
	Status Network_NetworkStatus `protobuf:"varint,10,opt,name=status,proto3,enum=doublecloud.network.v1.Network_NetworkStatus" json:"status,omitempty"`
	// The reason for the status change.
	StatusReason string `protobuf:"bytes,11,opt,name=status_reason,json=statusReason,proto3" json:"status_reason,omitempty"`
	// Provider based resources
	//
	// Types that are assignable to ExternalResources:
	//
	//	*Network_Aws
	//	*Network_Gcp
	ExternalResources isNetwork_ExternalResources `protobuf_oneof:"external_resources"`
	// True if network was imported using BYOC.
	IsExternal bool `protobuf:"varint,13,opt,name=is_external,json=isExternal,proto3" json:"is_external,omitempty"`
}

func (x *Network) Reset() {
	*x = Network{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_network_v1_network_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network) ProtoMessage() {}

func (x *Network) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_network_v1_network_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Network.ProtoReflect.Descriptor instead.
func (*Network) Descriptor() ([]byte, []int) {
	return file_doublecloud_network_v1_network_proto_rawDescGZIP(), []int{0}
}

func (x *Network) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Network) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Network) GetCloudType() string {
	if x != nil {
		return x.CloudType
	}
	return ""
}

func (x *Network) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *Network) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Network) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Network) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Network) GetIpv4CidrBlock() string {
	if x != nil {
		return x.Ipv4CidrBlock
	}
	return ""
}

func (x *Network) GetIpv6CidrBlock() string {
	if x != nil {
		return x.Ipv6CidrBlock
	}
	return ""
}

func (x *Network) GetStatus() Network_NetworkStatus {
	if x != nil {
		return x.Status
	}
	return Network_NETWORK_STATUS_INVALID
}

func (x *Network) GetStatusReason() string {
	if x != nil {
		return x.StatusReason
	}
	return ""
}

func (m *Network) GetExternalResources() isNetwork_ExternalResources {
	if m != nil {
		return m.ExternalResources
	}
	return nil
}

func (x *Network) GetAws() *AwsExternalResources {
	if x, ok := x.GetExternalResources().(*Network_Aws); ok {
		return x.Aws
	}
	return nil
}

func (x *Network) GetGcp() *GcpExternalResources {
	if x, ok := x.GetExternalResources().(*Network_Gcp); ok {
		return x.Gcp
	}
	return nil
}

func (x *Network) GetIsExternal() bool {
	if x != nil {
		return x.IsExternal
	}
	return false
}

type isNetwork_ExternalResources interface {
	isNetwork_ExternalResources()
}

type Network_Aws struct {
	Aws *AwsExternalResources `protobuf:"bytes,12,opt,name=aws,proto3,oneof"`
}

type Network_Gcp struct {
	Gcp *GcpExternalResources `protobuf:"bytes,14,opt,name=gcp,proto3,oneof"`
}

func (*Network_Aws) isNetwork_ExternalResources() {}

func (*Network_Gcp) isNetwork_ExternalResources() {}

type AwsExternalResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VpcId string `protobuf:"bytes,1,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	// ID of the VPC owner account.
	AccountId *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// IAM role ARN to use for resource creations.
	IamRoleArn *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=iam_role_arn,json=iamRoleArn,proto3" json:"iam_role_arn,omitempty"`
	// ID of the CloudFormation stack, VPC was created by.
	StackId *wrapperspb.StringValue `protobuf:"bytes,6,opt,name=stack_id,json=stackId,proto3" json:"stack_id,omitempty"`
	// CloudFormation template version.
	CfTemplateVersion *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=cf_template_version,json=cfTemplateVersion,proto3" json:"cf_template_version,omitempty"`
	// Use private subnets instead of default public.
	PrivateSubnets *wrapperspb.BoolValue `protobuf:"bytes,8,opt,name=private_subnets,json=privateSubnets,proto3" json:"private_subnets,omitempty"`
}

func (x *AwsExternalResources) Reset() {
	*x = AwsExternalResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_network_v1_network_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwsExternalResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsExternalResources) ProtoMessage() {}

func (x *AwsExternalResources) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_network_v1_network_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsExternalResources.ProtoReflect.Descriptor instead.
func (*AwsExternalResources) Descriptor() ([]byte, []int) {
	return file_doublecloud_network_v1_network_proto_rawDescGZIP(), []int{1}
}

func (x *AwsExternalResources) GetVpcId() string {
	if x != nil {
		return x.VpcId
	}
	return ""
}

func (x *AwsExternalResources) GetAccountId() *wrapperspb.StringValue {
	if x != nil {
		return x.AccountId
	}
	return nil
}

func (x *AwsExternalResources) GetIamRoleArn() *wrapperspb.StringValue {
	if x != nil {
		return x.IamRoleArn
	}
	return nil
}

func (x *AwsExternalResources) GetStackId() *wrapperspb.StringValue {
	if x != nil {
		return x.StackId
	}
	return nil
}

func (x *AwsExternalResources) GetCfTemplateVersion() *wrapperspb.StringValue {
	if x != nil {
		return x.CfTemplateVersion
	}
	return nil
}

func (x *AwsExternalResources) GetPrivateSubnets() *wrapperspb.BoolValue {
	if x != nil {
		return x.PrivateSubnets
	}
	return nil
}

type GcpExternalResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the BYOC project.
	ProjectName *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	// ServiceAccount email to use for resource creations.
	ServiceAccountEmail *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=service_account_email,json=serviceAccountEmail,proto3" json:"service_account_email,omitempty"`
	// Name of a network to place instances.
	NetworkName *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=network_name,json=networkName,proto3" json:"network_name,omitempty"`
	// Name of a subnetwork to place instances.
	SubnetworkName *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=subnetwork_name,json=subnetworkName,proto3" json:"subnetwork_name,omitempty"`
}

func (x *GcpExternalResources) Reset() {
	*x = GcpExternalResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_network_v1_network_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GcpExternalResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GcpExternalResources) ProtoMessage() {}

func (x *GcpExternalResources) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_network_v1_network_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GcpExternalResources.ProtoReflect.Descriptor instead.
func (*GcpExternalResources) Descriptor() ([]byte, []int) {
	return file_doublecloud_network_v1_network_proto_rawDescGZIP(), []int{2}
}

func (x *GcpExternalResources) GetProjectName() *wrapperspb.StringValue {
	if x != nil {
		return x.ProjectName
	}
	return nil
}

func (x *GcpExternalResources) GetServiceAccountEmail() *wrapperspb.StringValue {
	if x != nil {
		return x.ServiceAccountEmail
	}
	return nil
}

func (x *GcpExternalResources) GetNetworkName() *wrapperspb.StringValue {
	if x != nil {
		return x.NetworkName
	}
	return nil
}

func (x *GcpExternalResources) GetSubnetworkName() *wrapperspb.StringValue {
	if x != nil {
		return x.SubnetworkName
	}
	return nil
}

var File_doublecloud_network_v1_network_proto protoreflect.FileDescriptor

var file_doublecloud_network_v1_network_proto_rawDesc = []byte{
	0x0a, 0x24, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xfb, 0x05, 0x0a, 0x07, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x70, 0x76,
	0x34, 0x5f, 0x63, 0x69, 0x64, 0x72, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x69, 0x70, 0x76, 0x34, 0x43, 0x69, 0x64, 0x72, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x63, 0x69, 0x64, 0x72, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x70, 0x76, 0x36,
	0x43, 0x69, 0x64, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x45, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x64, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x03, 0x61, 0x77, 0x73, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x77, 0x73, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x48, 0x00, 0x52, 0x03, 0x61, 0x77, 0x73, 0x12, 0x40, 0x0a, 0x03, 0x67, 0x63, 0x70, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x63,
	0x70, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x48, 0x00, 0x52, 0x03, 0x67, 0x63, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x69, 0x73, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x22, 0x9a, 0x01, 0x0a, 0x0d, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x16,
	0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x4e, 0x45, 0x54, 0x57,
	0x4f, 0x52, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54,
	0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02,
	0x12, 0x1b, 0x0a, 0x17, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x18, 0x0a,
	0x14, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x42, 0x14, 0x0a, 0x12, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0xfc, 0x02,
	0x0a, 0x14, 0x41, 0x77, 0x73, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x76, 0x70, 0x63, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x70, 0x63, 0x49, 0x64, 0x12, 0x3b, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0c, 0x69, 0x61,
	0x6d, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x72, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a,
	0x69, 0x61, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x72, 0x6e, 0x12, 0x37, 0x0a, 0x08, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x73, 0x74, 0x61, 0x63,
	0x6b, 0x49, 0x64, 0x12, 0x4c, 0x0a, 0x13, 0x63, 0x66, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x11,
	0x63, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x43, 0x0a, 0x0f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x75, 0x62,
	0x6e, 0x65, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53,
	0x75, 0x62, 0x6e, 0x65, 0x74, 0x73, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x04, 0x22, 0xb7, 0x02, 0x0a,
	0x14, 0x47, 0x63, 0x70, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x50, 0x0a, 0x15, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x13, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x3f, 0x0a, 0x0c, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x0f, 0x73, 0x75, 0x62,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0e, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x42, 0x43, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2f, 0x76, 0x31, 0x3b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_doublecloud_network_v1_network_proto_rawDescOnce sync.Once
	file_doublecloud_network_v1_network_proto_rawDescData = file_doublecloud_network_v1_network_proto_rawDesc
)

func file_doublecloud_network_v1_network_proto_rawDescGZIP() []byte {
	file_doublecloud_network_v1_network_proto_rawDescOnce.Do(func() {
		file_doublecloud_network_v1_network_proto_rawDescData = protoimpl.X.CompressGZIP(file_doublecloud_network_v1_network_proto_rawDescData)
	})
	return file_doublecloud_network_v1_network_proto_rawDescData
}

var file_doublecloud_network_v1_network_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_doublecloud_network_v1_network_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_doublecloud_network_v1_network_proto_goTypes = []interface{}{
	(Network_NetworkStatus)(0),     // 0: doublecloud.network.v1.Network.NetworkStatus
	(*Network)(nil),                // 1: doublecloud.network.v1.Network
	(*AwsExternalResources)(nil),   // 2: doublecloud.network.v1.AwsExternalResources
	(*GcpExternalResources)(nil),   // 3: doublecloud.network.v1.GcpExternalResources
	(*timestamppb.Timestamp)(nil),  // 4: google.protobuf.Timestamp
	(*wrapperspb.StringValue)(nil), // 5: google.protobuf.StringValue
	(*wrapperspb.BoolValue)(nil),   // 6: google.protobuf.BoolValue
}
var file_doublecloud_network_v1_network_proto_depIdxs = []int32{
	4,  // 0: doublecloud.network.v1.Network.create_time:type_name -> google.protobuf.Timestamp
	0,  // 1: doublecloud.network.v1.Network.status:type_name -> doublecloud.network.v1.Network.NetworkStatus
	2,  // 2: doublecloud.network.v1.Network.aws:type_name -> doublecloud.network.v1.AwsExternalResources
	3,  // 3: doublecloud.network.v1.Network.gcp:type_name -> doublecloud.network.v1.GcpExternalResources
	5,  // 4: doublecloud.network.v1.AwsExternalResources.account_id:type_name -> google.protobuf.StringValue
	5,  // 5: doublecloud.network.v1.AwsExternalResources.iam_role_arn:type_name -> google.protobuf.StringValue
	5,  // 6: doublecloud.network.v1.AwsExternalResources.stack_id:type_name -> google.protobuf.StringValue
	5,  // 7: doublecloud.network.v1.AwsExternalResources.cf_template_version:type_name -> google.protobuf.StringValue
	6,  // 8: doublecloud.network.v1.AwsExternalResources.private_subnets:type_name -> google.protobuf.BoolValue
	5,  // 9: doublecloud.network.v1.GcpExternalResources.project_name:type_name -> google.protobuf.StringValue
	5,  // 10: doublecloud.network.v1.GcpExternalResources.service_account_email:type_name -> google.protobuf.StringValue
	5,  // 11: doublecloud.network.v1.GcpExternalResources.network_name:type_name -> google.protobuf.StringValue
	5,  // 12: doublecloud.network.v1.GcpExternalResources.subnetwork_name:type_name -> google.protobuf.StringValue
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_doublecloud_network_v1_network_proto_init() }
func file_doublecloud_network_v1_network_proto_init() {
	if File_doublecloud_network_v1_network_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_doublecloud_network_v1_network_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Network); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_network_v1_network_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AwsExternalResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_network_v1_network_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GcpExternalResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_doublecloud_network_v1_network_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Network_Aws)(nil),
		(*Network_Gcp)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_doublecloud_network_v1_network_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_doublecloud_network_v1_network_proto_goTypes,
		DependencyIndexes: file_doublecloud_network_v1_network_proto_depIdxs,
		EnumInfos:         file_doublecloud_network_v1_network_proto_enumTypes,
		MessageInfos:      file_doublecloud_network_v1_network_proto_msgTypes,
	}.Build()
	File_doublecloud_network_v1_network_proto = out.File
	file_doublecloud_network_v1_network_proto_rawDesc = nil
	file_doublecloud_network_v1_network_proto_goTypes = nil
	file_doublecloud_network_v1_network_proto_depIdxs = nil
}
