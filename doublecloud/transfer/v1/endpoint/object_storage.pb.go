// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: doublecloud/transfer/v1/endpoint/object_storage.proto

package endpoint

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ObjectStorageCodec int32

const (
	ObjectStorageCodec_OBJECT_STORAGE_CODEC_UNSPECIFIED ObjectStorageCodec = 0
	ObjectStorageCodec_UNCOMPRESSED                     ObjectStorageCodec = 1
	ObjectStorageCodec_GZIP                             ObjectStorageCodec = 2
)

// Enum value maps for ObjectStorageCodec.
var (
	ObjectStorageCodec_name = map[int32]string{
		0: "OBJECT_STORAGE_CODEC_UNSPECIFIED",
		1: "UNCOMPRESSED",
		2: "GZIP",
	}
	ObjectStorageCodec_value = map[string]int32{
		"OBJECT_STORAGE_CODEC_UNSPECIFIED": 0,
		"UNCOMPRESSED":                     1,
		"GZIP":                             2,
	}
)

func (x ObjectStorageCodec) Enum() *ObjectStorageCodec {
	p := new(ObjectStorageCodec)
	*p = x
	return p
}

func (x ObjectStorageCodec) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ObjectStorageCodec) Descriptor() protoreflect.EnumDescriptor {
	return file_doublecloud_transfer_v1_endpoint_object_storage_proto_enumTypes[0].Descriptor()
}

func (ObjectStorageCodec) Type() protoreflect.EnumType {
	return &file_doublecloud_transfer_v1_endpoint_object_storage_proto_enumTypes[0]
}

func (x ObjectStorageCodec) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ObjectStorageCodec.Descriptor instead.
func (ObjectStorageCodec) EnumDescriptor() ([]byte, []int) {
	return file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDescGZIP(), []int{0}
}

type ObjectStorageSerializationFormat int32

const (
	ObjectStorageSerializationFormat_OBJECT_STORAGE_SERIALIZATION_FORMAT_UNSPECIFIED ObjectStorageSerializationFormat = 0
	ObjectStorageSerializationFormat_OBJECT_STORAGE_SERIALIZATION_FORMAT_JSON        ObjectStorageSerializationFormat = 1
	ObjectStorageSerializationFormat_OBJECT_STORAGE_SERIALIZATION_FORMAT_CSV         ObjectStorageSerializationFormat = 2
	ObjectStorageSerializationFormat_OBJECT_STORAGE_SERIALIZATION_FORMAT_RAW         ObjectStorageSerializationFormat = 3
	ObjectStorageSerializationFormat_OBJECT_STORAGE_SERIALIZATION_FORMAT_PARQUET     ObjectStorageSerializationFormat = 4
)

// Enum value maps for ObjectStorageSerializationFormat.
var (
	ObjectStorageSerializationFormat_name = map[int32]string{
		0: "OBJECT_STORAGE_SERIALIZATION_FORMAT_UNSPECIFIED",
		1: "OBJECT_STORAGE_SERIALIZATION_FORMAT_JSON",
		2: "OBJECT_STORAGE_SERIALIZATION_FORMAT_CSV",
		3: "OBJECT_STORAGE_SERIALIZATION_FORMAT_RAW",
		4: "OBJECT_STORAGE_SERIALIZATION_FORMAT_PARQUET",
	}
	ObjectStorageSerializationFormat_value = map[string]int32{
		"OBJECT_STORAGE_SERIALIZATION_FORMAT_UNSPECIFIED": 0,
		"OBJECT_STORAGE_SERIALIZATION_FORMAT_JSON":        1,
		"OBJECT_STORAGE_SERIALIZATION_FORMAT_CSV":         2,
		"OBJECT_STORAGE_SERIALIZATION_FORMAT_RAW":         3,
		"OBJECT_STORAGE_SERIALIZATION_FORMAT_PARQUET":     4,
	}
)

func (x ObjectStorageSerializationFormat) Enum() *ObjectStorageSerializationFormat {
	p := new(ObjectStorageSerializationFormat)
	*p = x
	return p
}

func (x ObjectStorageSerializationFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ObjectStorageSerializationFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_doublecloud_transfer_v1_endpoint_object_storage_proto_enumTypes[1].Descriptor()
}

func (ObjectStorageSerializationFormat) Type() protoreflect.EnumType {
	return &file_doublecloud_transfer_v1_endpoint_object_storage_proto_enumTypes[1]
}

func (x ObjectStorageSerializationFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ObjectStorageSerializationFormat.Descriptor instead.
func (ObjectStorageSerializationFormat) EnumDescriptor() ([]byte, []int) {
	return file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDescGZIP(), []int{1}
}

type ObjectStorageUnparsed int32

const (
	ObjectStorageUnparsed_OBJECT_STORAGE_UNPARSED_UNSPECIFIED ObjectStorageUnparsed = 0
	ObjectStorageUnparsed_OBJECT_STORAGE_UNPARSED_RETRY       ObjectStorageUnparsed = 1
	ObjectStorageUnparsed_OBJECT_STORAGE_UNPARSED_FAIL        ObjectStorageUnparsed = 2
	ObjectStorageUnparsed_OBJECT_STORAGE_UNPARSED_CONTINUE    ObjectStorageUnparsed = 3
)

// Enum value maps for ObjectStorageUnparsed.
var (
	ObjectStorageUnparsed_name = map[int32]string{
		0: "OBJECT_STORAGE_UNPARSED_UNSPECIFIED",
		1: "OBJECT_STORAGE_UNPARSED_RETRY",
		2: "OBJECT_STORAGE_UNPARSED_FAIL",
		3: "OBJECT_STORAGE_UNPARSED_CONTINUE",
	}
	ObjectStorageUnparsed_value = map[string]int32{
		"OBJECT_STORAGE_UNPARSED_UNSPECIFIED": 0,
		"OBJECT_STORAGE_UNPARSED_RETRY":       1,
		"OBJECT_STORAGE_UNPARSED_FAIL":        2,
		"OBJECT_STORAGE_UNPARSED_CONTINUE":    3,
	}
)

func (x ObjectStorageUnparsed) Enum() *ObjectStorageUnparsed {
	p := new(ObjectStorageUnparsed)
	*p = x
	return p
}

func (x ObjectStorageUnparsed) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ObjectStorageUnparsed) Descriptor() protoreflect.EnumDescriptor {
	return file_doublecloud_transfer_v1_endpoint_object_storage_proto_enumTypes[2].Descriptor()
}

func (ObjectStorageUnparsed) Type() protoreflect.EnumType {
	return &file_doublecloud_transfer_v1_endpoint_object_storage_proto_enumTypes[2]
}

func (x ObjectStorageUnparsed) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ObjectStorageUnparsed.Descriptor instead.
func (ObjectStorageUnparsed) EnumDescriptor() ([]byte, []int) {
	return file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDescGZIP(), []int{2}
}

type ObjectStorageReaderFormat_Jsonl_UnexpectedFieldBehavior int32

const (
	ObjectStorageReaderFormat_Jsonl_UNEXPECTED_FIELD_BEHAVIOR_UNSPECIFIED ObjectStorageReaderFormat_Jsonl_UnexpectedFieldBehavior = 0
	ObjectStorageReaderFormat_Jsonl_UNEXPECTED_FIELD_BEHAVIOR_IGNORE      ObjectStorageReaderFormat_Jsonl_UnexpectedFieldBehavior = 1
	ObjectStorageReaderFormat_Jsonl_UNEXPECTED_FIELD_BEHAVIOR_INFER       ObjectStorageReaderFormat_Jsonl_UnexpectedFieldBehavior = 2
	ObjectStorageReaderFormat_Jsonl_UNEXPECTED_FIELD_BEHAVIOR_ERROR       ObjectStorageReaderFormat_Jsonl_UnexpectedFieldBehavior = 3
)

// Enum value maps for ObjectStorageReaderFormat_Jsonl_UnexpectedFieldBehavior.
var (
	ObjectStorageReaderFormat_Jsonl_UnexpectedFieldBehavior_name = map[int32]string{
		0: "UNEXPECTED_FIELD_BEHAVIOR_UNSPECIFIED",
		1: "UNEXPECTED_FIELD_BEHAVIOR_IGNORE",
		2: "UNEXPECTED_FIELD_BEHAVIOR_INFER",
		3: "UNEXPECTED_FIELD_BEHAVIOR_ERROR",
	}
	ObjectStorageReaderFormat_Jsonl_UnexpectedFieldBehavior_value = map[string]int32{
		"UNEXPECTED_FIELD_BEHAVIOR_UNSPECIFIED": 0,
		"UNEXPECTED_FIELD_BEHAVIOR_IGNORE":      1,
		"UNEXPECTED_FIELD_BEHAVIOR_INFER":       2,
		"UNEXPECTED_FIELD_BEHAVIOR_ERROR":       3,
	}
)

func (x ObjectStorageReaderFormat_Jsonl_UnexpectedFieldBehavior) Enum() *ObjectStorageReaderFormat_Jsonl_UnexpectedFieldBehavior {
	p := new(ObjectStorageReaderFormat_Jsonl_UnexpectedFieldBehavior)
	*p = x
	return p
}

func (x ObjectStorageReaderFormat_Jsonl_UnexpectedFieldBehavior) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ObjectStorageReaderFormat_Jsonl_UnexpectedFieldBehavior) Descriptor() protoreflect.EnumDescriptor {
	return file_doublecloud_transfer_v1_endpoint_object_storage_proto_enumTypes[3].Descriptor()
}

func (ObjectStorageReaderFormat_Jsonl_UnexpectedFieldBehavior) Type() protoreflect.EnumType {
	return &file_doublecloud_transfer_v1_endpoint_object_storage_proto_enumTypes[3]
}

func (x ObjectStorageReaderFormat_Jsonl_UnexpectedFieldBehavior) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ObjectStorageReaderFormat_Jsonl_UnexpectedFieldBehavior.Descriptor instead.
func (ObjectStorageReaderFormat_Jsonl_UnexpectedFieldBehavior) EnumDescriptor() ([]byte, []int) {
	return file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDescGZIP(), []int{4, 0, 0}
}

type ObjectStorageConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AwsAccessKeyId     string `protobuf:"bytes,3,opt,name=aws_access_key_id,json=awsAccessKeyId,proto3" json:"aws_access_key_id,omitempty"`
	AwsSecretAccessKey string `protobuf:"bytes,4,opt,name=aws_secret_access_key,json=awsSecretAccessKey,proto3" json:"aws_secret_access_key,omitempty"`
	Region             string `protobuf:"bytes,5,opt,name=region,proto3" json:"region,omitempty"`
	Endpoint           string `protobuf:"bytes,6,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	UseSsl             bool   `protobuf:"varint,7,opt,name=use_ssl,json=useSsl,proto3" json:"use_ssl,omitempty"`
	VerifySslCert      bool   `protobuf:"varint,8,opt,name=verify_ssl_cert,json=verifySslCert,proto3" json:"verify_ssl_cert,omitempty"`
}

func (x *ObjectStorageConnection) Reset() {
	*x = ObjectStorageConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectStorageConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectStorageConnection) ProtoMessage() {}

func (x *ObjectStorageConnection) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectStorageConnection.ProtoReflect.Descriptor instead.
func (*ObjectStorageConnection) Descriptor() ([]byte, []int) {
	return file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDescGZIP(), []int{0}
}

func (x *ObjectStorageConnection) GetAwsAccessKeyId() string {
	if x != nil {
		return x.AwsAccessKeyId
	}
	return ""
}

func (x *ObjectStorageConnection) GetAwsSecretAccessKey() string {
	if x != nil {
		return x.AwsSecretAccessKey
	}
	return ""
}

func (x *ObjectStorageConnection) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ObjectStorageConnection) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *ObjectStorageConnection) GetUseSsl() bool {
	if x != nil {
		return x.UseSsl
	}
	return false
}

func (x *ObjectStorageConnection) GetVerifySslCert() bool {
	if x != nil {
		return x.VerifySslCert
	}
	return false
}

type ObjectStorageSerializerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnyAsString bool `protobuf:"varint,1,opt,name=any_as_string,json=anyAsString,proto3" json:"any_as_string,omitempty"`
}

func (x *ObjectStorageSerializerConfig) Reset() {
	*x = ObjectStorageSerializerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectStorageSerializerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectStorageSerializerConfig) ProtoMessage() {}

func (x *ObjectStorageSerializerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectStorageSerializerConfig.ProtoReflect.Descriptor instead.
func (*ObjectStorageSerializerConfig) Descriptor() ([]byte, []int) {
	return file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDescGZIP(), []int{1}
}

func (x *ObjectStorageSerializerConfig) GetAnyAsString() bool {
	if x != nil {
		return x.AnyAsString
	}
	return false
}

type ObjectStorageTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket               string                           `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	ServiceAccountId     string                           `protobuf:"bytes,8,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	OutputFormat         ObjectStorageSerializationFormat `protobuf:"varint,4,opt,name=output_format,json=outputFormat,proto3,enum=doublecloud.transfer.v1.endpoint.ObjectStorageSerializationFormat" json:"output_format,omitempty"`
	BucketLayout         string                           `protobuf:"bytes,5,opt,name=bucket_layout,json=bucketLayout,proto3" json:"bucket_layout,omitempty"`
	BucketLayoutTimezone string                           `protobuf:"bytes,11,opt,name=bucket_layout_timezone,json=bucketLayoutTimezone,proto3" json:"bucket_layout_timezone,omitempty"`
	BucketLayoutColumn   string                           `protobuf:"bytes,12,opt,name=bucket_layout_column,json=bucketLayoutColumn,proto3" json:"bucket_layout_column,omitempty"`
	BufferSize           string                           `protobuf:"bytes,6,opt,name=buffer_size,json=bufferSize,proto3" json:"buffer_size,omitempty"`
	BufferInterval       string                           `protobuf:"bytes,7,opt,name=buffer_interval,json=bufferInterval,proto3" json:"buffer_interval,omitempty"`
	OutputEncoding       ObjectStorageCodec               `protobuf:"varint,9,opt,name=output_encoding,json=outputEncoding,proto3,enum=doublecloud.transfer.v1.endpoint.ObjectStorageCodec" json:"output_encoding,omitempty"`
	Connection           *ObjectStorageConnection         `protobuf:"bytes,10,opt,name=connection,proto3" json:"connection,omitempty"`
	SerializerConfig     *ObjectStorageSerializerConfig   `protobuf:"bytes,13,opt,name=serializer_config,json=serializerConfig,proto3" json:"serializer_config,omitempty"`
}

func (x *ObjectStorageTarget) Reset() {
	*x = ObjectStorageTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectStorageTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectStorageTarget) ProtoMessage() {}

func (x *ObjectStorageTarget) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectStorageTarget.ProtoReflect.Descriptor instead.
func (*ObjectStorageTarget) Descriptor() ([]byte, []int) {
	return file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDescGZIP(), []int{2}
}

func (x *ObjectStorageTarget) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *ObjectStorageTarget) GetServiceAccountId() string {
	if x != nil {
		return x.ServiceAccountId
	}
	return ""
}

func (x *ObjectStorageTarget) GetOutputFormat() ObjectStorageSerializationFormat {
	if x != nil {
		return x.OutputFormat
	}
	return ObjectStorageSerializationFormat_OBJECT_STORAGE_SERIALIZATION_FORMAT_UNSPECIFIED
}

func (x *ObjectStorageTarget) GetBucketLayout() string {
	if x != nil {
		return x.BucketLayout
	}
	return ""
}

func (x *ObjectStorageTarget) GetBucketLayoutTimezone() string {
	if x != nil {
		return x.BucketLayoutTimezone
	}
	return ""
}

func (x *ObjectStorageTarget) GetBucketLayoutColumn() string {
	if x != nil {
		return x.BucketLayoutColumn
	}
	return ""
}

func (x *ObjectStorageTarget) GetBufferSize() string {
	if x != nil {
		return x.BufferSize
	}
	return ""
}

func (x *ObjectStorageTarget) GetBufferInterval() string {
	if x != nil {
		return x.BufferInterval
	}
	return ""
}

func (x *ObjectStorageTarget) GetOutputEncoding() ObjectStorageCodec {
	if x != nil {
		return x.OutputEncoding
	}
	return ObjectStorageCodec_OBJECT_STORAGE_CODEC_UNSPECIFIED
}

func (x *ObjectStorageTarget) GetConnection() *ObjectStorageConnection {
	if x != nil {
		return x.Connection
	}
	return nil
}

func (x *ObjectStorageTarget) GetSerializerConfig() *ObjectStorageSerializerConfig {
	if x != nil {
		return x.SerializerConfig
	}
	return nil
}

type ObjectStorageProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket             string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	AwsAccessKeyId     string `protobuf:"bytes,2,opt,name=aws_access_key_id,json=awsAccessKeyId,proto3" json:"aws_access_key_id,omitempty"`
	AwsSecretAccessKey string `protobuf:"bytes,3,opt,name=aws_secret_access_key,json=awsSecretAccessKey,proto3" json:"aws_secret_access_key,omitempty"`
	PathPrefix         string `protobuf:"bytes,4,opt,name=path_prefix,json=pathPrefix,proto3" json:"path_prefix,omitempty"`
	Endpoint           string `protobuf:"bytes,5,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Region             string `protobuf:"bytes,8,opt,name=region,proto3" json:"region,omitempty"`
	UseSsl             bool   `protobuf:"varint,6,opt,name=use_ssl,json=useSsl,proto3" json:"use_ssl,omitempty"`
	VerifySslCert      bool   `protobuf:"varint,7,opt,name=verify_ssl_cert,json=verifySslCert,proto3" json:"verify_ssl_cert,omitempty"`
}

func (x *ObjectStorageProvider) Reset() {
	*x = ObjectStorageProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectStorageProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectStorageProvider) ProtoMessage() {}

func (x *ObjectStorageProvider) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectStorageProvider.ProtoReflect.Descriptor instead.
func (*ObjectStorageProvider) Descriptor() ([]byte, []int) {
	return file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDescGZIP(), []int{3}
}

func (x *ObjectStorageProvider) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *ObjectStorageProvider) GetAwsAccessKeyId() string {
	if x != nil {
		return x.AwsAccessKeyId
	}
	return ""
}

func (x *ObjectStorageProvider) GetAwsSecretAccessKey() string {
	if x != nil {
		return x.AwsSecretAccessKey
	}
	return ""
}

func (x *ObjectStorageProvider) GetPathPrefix() string {
	if x != nil {
		return x.PathPrefix
	}
	return ""
}

func (x *ObjectStorageProvider) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *ObjectStorageProvider) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ObjectStorageProvider) GetUseSsl() bool {
	if x != nil {
		return x.UseSsl
	}
	return false
}

func (x *ObjectStorageProvider) GetVerifySslCert() bool {
	if x != nil {
		return x.VerifySslCert
	}
	return false
}

type ObjectStorageReaderFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Format:
	//
	//	*ObjectStorageReaderFormat_Csv_
	//	*ObjectStorageReaderFormat_Parquet_
	//	*ObjectStorageReaderFormat_Avro_
	//	*ObjectStorageReaderFormat_Jsonl_
	//	*ObjectStorageReaderFormat_Proto
	Format isObjectStorageReaderFormat_Format `protobuf_oneof:"format"`
}

func (x *ObjectStorageReaderFormat) Reset() {
	*x = ObjectStorageReaderFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectStorageReaderFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectStorageReaderFormat) ProtoMessage() {}

func (x *ObjectStorageReaderFormat) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectStorageReaderFormat.ProtoReflect.Descriptor instead.
func (*ObjectStorageReaderFormat) Descriptor() ([]byte, []int) {
	return file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDescGZIP(), []int{4}
}

func (m *ObjectStorageReaderFormat) GetFormat() isObjectStorageReaderFormat_Format {
	if m != nil {
		return m.Format
	}
	return nil
}

func (x *ObjectStorageReaderFormat) GetCsv() *ObjectStorageReaderFormat_Csv {
	if x, ok := x.GetFormat().(*ObjectStorageReaderFormat_Csv_); ok {
		return x.Csv
	}
	return nil
}

func (x *ObjectStorageReaderFormat) GetParquet() *ObjectStorageReaderFormat_Parquet {
	if x, ok := x.GetFormat().(*ObjectStorageReaderFormat_Parquet_); ok {
		return x.Parquet
	}
	return nil
}

func (x *ObjectStorageReaderFormat) GetAvro() *ObjectStorageReaderFormat_Avro {
	if x, ok := x.GetFormat().(*ObjectStorageReaderFormat_Avro_); ok {
		return x.Avro
	}
	return nil
}

func (x *ObjectStorageReaderFormat) GetJsonl() *ObjectStorageReaderFormat_Jsonl {
	if x, ok := x.GetFormat().(*ObjectStorageReaderFormat_Jsonl_); ok {
		return x.Jsonl
	}
	return nil
}

func (x *ObjectStorageReaderFormat) GetProto() *ProtoParser {
	if x, ok := x.GetFormat().(*ObjectStorageReaderFormat_Proto); ok {
		return x.Proto
	}
	return nil
}

type isObjectStorageReaderFormat_Format interface {
	isObjectStorageReaderFormat_Format()
}

type ObjectStorageReaderFormat_Csv_ struct {
	Csv *ObjectStorageReaderFormat_Csv `protobuf:"bytes,4,opt,name=csv,proto3,oneof"`
}

type ObjectStorageReaderFormat_Parquet_ struct {
	Parquet *ObjectStorageReaderFormat_Parquet `protobuf:"bytes,5,opt,name=parquet,proto3,oneof"`
}

type ObjectStorageReaderFormat_Avro_ struct {
	Avro *ObjectStorageReaderFormat_Avro `protobuf:"bytes,6,opt,name=avro,proto3,oneof"`
}

type ObjectStorageReaderFormat_Jsonl_ struct {
	Jsonl *ObjectStorageReaderFormat_Jsonl `protobuf:"bytes,7,opt,name=jsonl,proto3,oneof"`
}

type ObjectStorageReaderFormat_Proto struct {
	// from queue parsers
	Proto *ProtoParser `protobuf:"bytes,8,opt,name=proto,proto3,oneof"`
}

func (*ObjectStorageReaderFormat_Csv_) isObjectStorageReaderFormat_Format() {}

func (*ObjectStorageReaderFormat_Parquet_) isObjectStorageReaderFormat_Format() {}

func (*ObjectStorageReaderFormat_Avro_) isObjectStorageReaderFormat_Format() {}

func (*ObjectStorageReaderFormat_Jsonl_) isObjectStorageReaderFormat_Format() {}

func (*ObjectStorageReaderFormat_Proto) isObjectStorageReaderFormat_Format() {}

type ObjectStorageDataSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Schema:
	//
	//	*ObjectStorageDataSchema_Infer
	//	*ObjectStorageDataSchema_DataSchema
	Schema isObjectStorageDataSchema_Schema `protobuf_oneof:"schema"`
}

func (x *ObjectStorageDataSchema) Reset() {
	*x = ObjectStorageDataSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectStorageDataSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectStorageDataSchema) ProtoMessage() {}

func (x *ObjectStorageDataSchema) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectStorageDataSchema.ProtoReflect.Descriptor instead.
func (*ObjectStorageDataSchema) Descriptor() ([]byte, []int) {
	return file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDescGZIP(), []int{5}
}

func (m *ObjectStorageDataSchema) GetSchema() isObjectStorageDataSchema_Schema {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (x *ObjectStorageDataSchema) GetInfer() *emptypb.Empty {
	if x, ok := x.GetSchema().(*ObjectStorageDataSchema_Infer); ok {
		return x.Infer
	}
	return nil
}

func (x *ObjectStorageDataSchema) GetDataSchema() *DataSchema {
	if x, ok := x.GetSchema().(*ObjectStorageDataSchema_DataSchema); ok {
		return x.DataSchema
	}
	return nil
}

type isObjectStorageDataSchema_Schema interface {
	isObjectStorageDataSchema_Schema()
}

type ObjectStorageDataSchema_Infer struct {
	Infer *emptypb.Empty `protobuf:"bytes,1,opt,name=infer,proto3,oneof"`
}

type ObjectStorageDataSchema_DataSchema struct {
	DataSchema *DataSchema `protobuf:"bytes,2,opt,name=data_schema,json=dataSchema,proto3,oneof"`
}

func (*ObjectStorageDataSchema_Infer) isObjectStorageDataSchema_Schema() {}

func (*ObjectStorageDataSchema_DataSchema) isObjectStorageDataSchema_Schema() {}

type ObjectStorageResultTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableNamespace string `protobuf:"bytes,1,opt,name=table_namespace,json=tableNamespace,proto3" json:"table_namespace,omitempty"`
	TableName      string `protobuf:"bytes,2,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	AddSystemCols  bool   `protobuf:"varint,3,opt,name=add_system_cols,json=addSystemCols,proto3" json:"add_system_cols,omitempty"`
}

func (x *ObjectStorageResultTable) Reset() {
	*x = ObjectStorageResultTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectStorageResultTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectStorageResultTable) ProtoMessage() {}

func (x *ObjectStorageResultTable) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectStorageResultTable.ProtoReflect.Descriptor instead.
func (*ObjectStorageResultTable) Descriptor() ([]byte, []int) {
	return file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDescGZIP(), []int{6}
}

func (x *ObjectStorageResultTable) GetTableNamespace() string {
	if x != nil {
		return x.TableNamespace
	}
	return ""
}

func (x *ObjectStorageResultTable) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *ObjectStorageResultTable) GetAddSystemCols() bool {
	if x != nil {
		return x.AddSystemCols
	}
	return false
}

type ObjectStorageSourceAdvancedSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnparsedMode ObjectStorageUnparsed `protobuf:"varint,1,opt,name=unparsed_mode,json=unparsedMode,proto3,enum=doublecloud.transfer.v1.endpoint.ObjectStorageUnparsed" json:"unparsed_mode,omitempty"`
}

func (x *ObjectStorageSourceAdvancedSettings) Reset() {
	*x = ObjectStorageSourceAdvancedSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectStorageSourceAdvancedSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectStorageSourceAdvancedSettings) ProtoMessage() {}

func (x *ObjectStorageSourceAdvancedSettings) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectStorageSourceAdvancedSettings.ProtoReflect.Descriptor instead.
func (*ObjectStorageSourceAdvancedSettings) Descriptor() ([]byte, []int) {
	return file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDescGZIP(), []int{7}
}

func (x *ObjectStorageSourceAdvancedSettings) GetUnparsedMode() ObjectStorageUnparsed {
	if x != nil {
		return x.UnparsedMode
	}
	return ObjectStorageUnparsed_OBJECT_STORAGE_UNPARSED_UNSPECIFIED
}

type ObjectStorageEventSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Source:
	//
	//	*ObjectStorageEventSource_Sqs
	//	*ObjectStorageEventSource_Sns
	//	*ObjectStorageEventSource_PubSub_
	Source isObjectStorageEventSource_Source `protobuf_oneof:"source"`
}

func (x *ObjectStorageEventSource) Reset() {
	*x = ObjectStorageEventSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectStorageEventSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectStorageEventSource) ProtoMessage() {}

func (x *ObjectStorageEventSource) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectStorageEventSource.ProtoReflect.Descriptor instead.
func (*ObjectStorageEventSource) Descriptor() ([]byte, []int) {
	return file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDescGZIP(), []int{8}
}

func (m *ObjectStorageEventSource) GetSource() isObjectStorageEventSource_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (x *ObjectStorageEventSource) GetSqs() *ObjectStorageEventSource_SQS {
	if x, ok := x.GetSource().(*ObjectStorageEventSource_Sqs); ok {
		return x.Sqs
	}
	return nil
}

func (x *ObjectStorageEventSource) GetSns() *ObjectStorageEventSource_SNS {
	if x, ok := x.GetSource().(*ObjectStorageEventSource_Sns); ok {
		return x.Sns
	}
	return nil
}

func (x *ObjectStorageEventSource) GetPubSub() *ObjectStorageEventSource_PubSub {
	if x, ok := x.GetSource().(*ObjectStorageEventSource_PubSub_); ok {
		return x.PubSub
	}
	return nil
}

type isObjectStorageEventSource_Source interface {
	isObjectStorageEventSource_Source()
}

type ObjectStorageEventSource_Sqs struct {
	Sqs *ObjectStorageEventSource_SQS `protobuf:"bytes,1,opt,name=sqs,proto3,oneof"`
}

type ObjectStorageEventSource_Sns struct {
	Sns *ObjectStorageEventSource_SNS `protobuf:"bytes,2,opt,name=sns,proto3,oneof"`
}

type ObjectStorageEventSource_PubSub_ struct {
	PubSub *ObjectStorageEventSource_PubSub `protobuf:"bytes,3,opt,name=pub_sub,json=pubSub,proto3,oneof"`
}

func (*ObjectStorageEventSource_Sqs) isObjectStorageEventSource_Source() {}

func (*ObjectStorageEventSource_Sns) isObjectStorageEventSource_Source() {}

func (*ObjectStorageEventSource_PubSub_) isObjectStorageEventSource_Source() {}

type ObjectStorageSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider         *ObjectStorageProvider               `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Format           *ObjectStorageReaderFormat           `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	PathPattern      string                               `protobuf:"bytes,3,opt,name=path_pattern,json=pathPattern,proto3" json:"path_pattern,omitempty"`
	ResultTable      *ObjectStorageResultTable            `protobuf:"bytes,4,opt,name=result_table,json=resultTable,proto3" json:"result_table,omitempty"`
	ResultSchema     *ObjectStorageDataSchema             `protobuf:"bytes,5,opt,name=result_schema,json=resultSchema,proto3" json:"result_schema,omitempty"`
	EventSource      *ObjectStorageEventSource            `protobuf:"bytes,6,opt,name=event_source,json=eventSource,proto3" json:"event_source,omitempty"`
	AdvancedSettings *ObjectStorageSourceAdvancedSettings `protobuf:"bytes,7,opt,name=advanced_settings,json=advancedSettings,proto3" json:"advanced_settings,omitempty"`
}

func (x *ObjectStorageSource) Reset() {
	*x = ObjectStorageSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectStorageSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectStorageSource) ProtoMessage() {}

func (x *ObjectStorageSource) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectStorageSource.ProtoReflect.Descriptor instead.
func (*ObjectStorageSource) Descriptor() ([]byte, []int) {
	return file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDescGZIP(), []int{9}
}

func (x *ObjectStorageSource) GetProvider() *ObjectStorageProvider {
	if x != nil {
		return x.Provider
	}
	return nil
}

func (x *ObjectStorageSource) GetFormat() *ObjectStorageReaderFormat {
	if x != nil {
		return x.Format
	}
	return nil
}

func (x *ObjectStorageSource) GetPathPattern() string {
	if x != nil {
		return x.PathPattern
	}
	return ""
}

func (x *ObjectStorageSource) GetResultTable() *ObjectStorageResultTable {
	if x != nil {
		return x.ResultTable
	}
	return nil
}

func (x *ObjectStorageSource) GetResultSchema() *ObjectStorageDataSchema {
	if x != nil {
		return x.ResultSchema
	}
	return nil
}

func (x *ObjectStorageSource) GetEventSource() *ObjectStorageEventSource {
	if x != nil {
		return x.EventSource
	}
	return nil
}

func (x *ObjectStorageSource) GetAdvancedSettings() *ObjectStorageSourceAdvancedSettings {
	if x != nil {
		return x.AdvancedSettings
	}
	return nil
}

type ObjectStorageReaderFormat_Jsonl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewlinesInValues        bool                                                    `protobuf:"varint,2,opt,name=newlines_in_values,json=newlinesInValues,proto3" json:"newlines_in_values,omitempty"`
	UnexpectedFieldBehavior ObjectStorageReaderFormat_Jsonl_UnexpectedFieldBehavior `protobuf:"varint,3,opt,name=unexpected_field_behavior,json=unexpectedFieldBehavior,proto3,enum=doublecloud.transfer.v1.endpoint.ObjectStorageReaderFormat_Jsonl_UnexpectedFieldBehavior" json:"unexpected_field_behavior,omitempty"`
	BlockSize               int64                                                   `protobuf:"varint,4,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`
}

func (x *ObjectStorageReaderFormat_Jsonl) Reset() {
	*x = ObjectStorageReaderFormat_Jsonl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectStorageReaderFormat_Jsonl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectStorageReaderFormat_Jsonl) ProtoMessage() {}

func (x *ObjectStorageReaderFormat_Jsonl) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectStorageReaderFormat_Jsonl.ProtoReflect.Descriptor instead.
func (*ObjectStorageReaderFormat_Jsonl) Descriptor() ([]byte, []int) {
	return file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDescGZIP(), []int{4, 0}
}

func (x *ObjectStorageReaderFormat_Jsonl) GetNewlinesInValues() bool {
	if x != nil {
		return x.NewlinesInValues
	}
	return false
}

func (x *ObjectStorageReaderFormat_Jsonl) GetUnexpectedFieldBehavior() ObjectStorageReaderFormat_Jsonl_UnexpectedFieldBehavior {
	if x != nil {
		return x.UnexpectedFieldBehavior
	}
	return ObjectStorageReaderFormat_Jsonl_UNEXPECTED_FIELD_BEHAVIOR_UNSPECIFIED
}

func (x *ObjectStorageReaderFormat_Jsonl) GetBlockSize() int64 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

type ObjectStorageReaderFormat_Csv struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Delimiter         string                                                 `protobuf:"bytes,2,opt,name=delimiter,proto3" json:"delimiter,omitempty"`
	QuoteChar         string                                                 `protobuf:"bytes,3,opt,name=quote_char,json=quoteChar,proto3" json:"quote_char,omitempty"`
	EscapeChar        string                                                 `protobuf:"bytes,4,opt,name=escape_char,json=escapeChar,proto3" json:"escape_char,omitempty"`
	Encoding          string                                                 `protobuf:"bytes,5,opt,name=encoding,proto3" json:"encoding,omitempty"`
	DoubleQuote       bool                                                   `protobuf:"varint,6,opt,name=double_quote,json=doubleQuote,proto3" json:"double_quote,omitempty"`
	NewlinesInValues  bool                                                   `protobuf:"varint,7,opt,name=newlines_in_values,json=newlinesInValues,proto3" json:"newlines_in_values,omitempty"`
	BlockSize         int64                                                  `protobuf:"varint,8,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`
	AdvancedOptions   *ObjectStorageReaderFormat_Csv_AdvancedOptions         `protobuf:"bytes,9,opt,name=advanced_options,json=advancedOptions,proto3" json:"advanced_options,omitempty"`
	AdditionalOptions *ObjectStorageReaderFormat_Csv_AdditionalReaderOptions `protobuf:"bytes,10,opt,name=additional_options,json=additionalOptions,proto3" json:"additional_options,omitempty"`
}

func (x *ObjectStorageReaderFormat_Csv) Reset() {
	*x = ObjectStorageReaderFormat_Csv{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectStorageReaderFormat_Csv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectStorageReaderFormat_Csv) ProtoMessage() {}

func (x *ObjectStorageReaderFormat_Csv) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectStorageReaderFormat_Csv.ProtoReflect.Descriptor instead.
func (*ObjectStorageReaderFormat_Csv) Descriptor() ([]byte, []int) {
	return file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDescGZIP(), []int{4, 1}
}

func (x *ObjectStorageReaderFormat_Csv) GetDelimiter() string {
	if x != nil {
		return x.Delimiter
	}
	return ""
}

func (x *ObjectStorageReaderFormat_Csv) GetQuoteChar() string {
	if x != nil {
		return x.QuoteChar
	}
	return ""
}

func (x *ObjectStorageReaderFormat_Csv) GetEscapeChar() string {
	if x != nil {
		return x.EscapeChar
	}
	return ""
}

func (x *ObjectStorageReaderFormat_Csv) GetEncoding() string {
	if x != nil {
		return x.Encoding
	}
	return ""
}

func (x *ObjectStorageReaderFormat_Csv) GetDoubleQuote() bool {
	if x != nil {
		return x.DoubleQuote
	}
	return false
}

func (x *ObjectStorageReaderFormat_Csv) GetNewlinesInValues() bool {
	if x != nil {
		return x.NewlinesInValues
	}
	return false
}

func (x *ObjectStorageReaderFormat_Csv) GetBlockSize() int64 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

func (x *ObjectStorageReaderFormat_Csv) GetAdvancedOptions() *ObjectStorageReaderFormat_Csv_AdvancedOptions {
	if x != nil {
		return x.AdvancedOptions
	}
	return nil
}

func (x *ObjectStorageReaderFormat_Csv) GetAdditionalOptions() *ObjectStorageReaderFormat_Csv_AdditionalReaderOptions {
	if x != nil {
		return x.AdditionalOptions
	}
	return nil
}

type ObjectStorageReaderFormat_Avro struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ObjectStorageReaderFormat_Avro) Reset() {
	*x = ObjectStorageReaderFormat_Avro{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectStorageReaderFormat_Avro) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectStorageReaderFormat_Avro) ProtoMessage() {}

func (x *ObjectStorageReaderFormat_Avro) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectStorageReaderFormat_Avro.ProtoReflect.Descriptor instead.
func (*ObjectStorageReaderFormat_Avro) Descriptor() ([]byte, []int) {
	return file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDescGZIP(), []int{4, 2}
}

type ObjectStorageReaderFormat_Parquet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ObjectStorageReaderFormat_Parquet) Reset() {
	*x = ObjectStorageReaderFormat_Parquet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectStorageReaderFormat_Parquet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectStorageReaderFormat_Parquet) ProtoMessage() {}

func (x *ObjectStorageReaderFormat_Parquet) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectStorageReaderFormat_Parquet.ProtoReflect.Descriptor instead.
func (*ObjectStorageReaderFormat_Parquet) Descriptor() ([]byte, []int) {
	return file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDescGZIP(), []int{4, 3}
}

type ObjectStorageReaderFormat_Csv_AdvancedOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkipRows                int64    `protobuf:"varint,1,opt,name=skip_rows,json=skipRows,proto3" json:"skip_rows,omitempty"`
	SkipRowsAfterNames      int64    `protobuf:"varint,2,opt,name=skip_rows_after_names,json=skipRowsAfterNames,proto3" json:"skip_rows_after_names,omitempty"`
	AutogenerateColumnNames bool     `protobuf:"varint,3,opt,name=autogenerate_column_names,json=autogenerateColumnNames,proto3" json:"autogenerate_column_names,omitempty"`
	ColumnNames             []string `protobuf:"bytes,4,rep,name=column_names,json=columnNames,proto3" json:"column_names,omitempty"`
}

func (x *ObjectStorageReaderFormat_Csv_AdvancedOptions) Reset() {
	*x = ObjectStorageReaderFormat_Csv_AdvancedOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectStorageReaderFormat_Csv_AdvancedOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectStorageReaderFormat_Csv_AdvancedOptions) ProtoMessage() {}

func (x *ObjectStorageReaderFormat_Csv_AdvancedOptions) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectStorageReaderFormat_Csv_AdvancedOptions.ProtoReflect.Descriptor instead.
func (*ObjectStorageReaderFormat_Csv_AdvancedOptions) Descriptor() ([]byte, []int) {
	return file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDescGZIP(), []int{4, 1, 0}
}

func (x *ObjectStorageReaderFormat_Csv_AdvancedOptions) GetSkipRows() int64 {
	if x != nil {
		return x.SkipRows
	}
	return 0
}

func (x *ObjectStorageReaderFormat_Csv_AdvancedOptions) GetSkipRowsAfterNames() int64 {
	if x != nil {
		return x.SkipRowsAfterNames
	}
	return 0
}

func (x *ObjectStorageReaderFormat_Csv_AdvancedOptions) GetAutogenerateColumnNames() bool {
	if x != nil {
		return x.AutogenerateColumnNames
	}
	return false
}

func (x *ObjectStorageReaderFormat_Csv_AdvancedOptions) GetColumnNames() []string {
	if x != nil {
		return x.ColumnNames
	}
	return nil
}

type ObjectStorageReaderFormat_Csv_AdditionalReaderOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NullValues             []string `protobuf:"bytes,1,rep,name=null_values,json=nullValues,proto3" json:"null_values,omitempty"`
	TrueValues             []string `protobuf:"bytes,2,rep,name=true_values,json=trueValues,proto3" json:"true_values,omitempty"`
	FalseValues            []string `protobuf:"bytes,3,rep,name=false_values,json=falseValues,proto3" json:"false_values,omitempty"`
	DecimalPoint           string   `protobuf:"bytes,4,opt,name=decimal_point,json=decimalPoint,proto3" json:"decimal_point,omitempty"`
	StringsCanBeNull       bool     `protobuf:"varint,5,opt,name=strings_can_be_null,json=stringsCanBeNull,proto3" json:"strings_can_be_null,omitempty"`
	QuotedStringsCanBeNull bool     `protobuf:"varint,6,opt,name=quoted_strings_can_be_null,json=quotedStringsCanBeNull,proto3" json:"quoted_strings_can_be_null,omitempty"`
	IncludeColumns         []string `protobuf:"bytes,7,rep,name=include_columns,json=includeColumns,proto3" json:"include_columns,omitempty"`
	IncludeMissingColumns  bool     `protobuf:"varint,8,opt,name=include_missing_columns,json=includeMissingColumns,proto3" json:"include_missing_columns,omitempty"`
	TimestampParsers       []string `protobuf:"bytes,9,rep,name=timestamp_parsers,json=timestampParsers,proto3" json:"timestamp_parsers,omitempty"`
}

func (x *ObjectStorageReaderFormat_Csv_AdditionalReaderOptions) Reset() {
	*x = ObjectStorageReaderFormat_Csv_AdditionalReaderOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectStorageReaderFormat_Csv_AdditionalReaderOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectStorageReaderFormat_Csv_AdditionalReaderOptions) ProtoMessage() {}

func (x *ObjectStorageReaderFormat_Csv_AdditionalReaderOptions) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectStorageReaderFormat_Csv_AdditionalReaderOptions.ProtoReflect.Descriptor instead.
func (*ObjectStorageReaderFormat_Csv_AdditionalReaderOptions) Descriptor() ([]byte, []int) {
	return file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDescGZIP(), []int{4, 1, 1}
}

func (x *ObjectStorageReaderFormat_Csv_AdditionalReaderOptions) GetNullValues() []string {
	if x != nil {
		return x.NullValues
	}
	return nil
}

func (x *ObjectStorageReaderFormat_Csv_AdditionalReaderOptions) GetTrueValues() []string {
	if x != nil {
		return x.TrueValues
	}
	return nil
}

func (x *ObjectStorageReaderFormat_Csv_AdditionalReaderOptions) GetFalseValues() []string {
	if x != nil {
		return x.FalseValues
	}
	return nil
}

func (x *ObjectStorageReaderFormat_Csv_AdditionalReaderOptions) GetDecimalPoint() string {
	if x != nil {
		return x.DecimalPoint
	}
	return ""
}

func (x *ObjectStorageReaderFormat_Csv_AdditionalReaderOptions) GetStringsCanBeNull() bool {
	if x != nil {
		return x.StringsCanBeNull
	}
	return false
}

func (x *ObjectStorageReaderFormat_Csv_AdditionalReaderOptions) GetQuotedStringsCanBeNull() bool {
	if x != nil {
		return x.QuotedStringsCanBeNull
	}
	return false
}

func (x *ObjectStorageReaderFormat_Csv_AdditionalReaderOptions) GetIncludeColumns() []string {
	if x != nil {
		return x.IncludeColumns
	}
	return nil
}

func (x *ObjectStorageReaderFormat_Csv_AdditionalReaderOptions) GetIncludeMissingColumns() bool {
	if x != nil {
		return x.IncludeMissingColumns
	}
	return false
}

func (x *ObjectStorageReaderFormat_Csv_AdditionalReaderOptions) GetTimestampParsers() []string {
	if x != nil {
		return x.TimestampParsers
	}
	return nil
}

type ObjectStorageEventSource_SQS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueName          string `protobuf:"bytes,1,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	OwnerId            string `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	AwsAccessKeyId     string `protobuf:"bytes,3,opt,name=aws_access_key_id,json=awsAccessKeyId,proto3" json:"aws_access_key_id,omitempty"`
	AwsSecretAccessKey string `protobuf:"bytes,4,opt,name=aws_secret_access_key,json=awsSecretAccessKey,proto3" json:"aws_secret_access_key,omitempty"`
	Endpoint           string `protobuf:"bytes,5,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Region             string `protobuf:"bytes,6,opt,name=region,proto3" json:"region,omitempty"`
	UseSsl             bool   `protobuf:"varint,7,opt,name=use_ssl,json=useSsl,proto3" json:"use_ssl,omitempty"`
	VerifySslCert      bool   `protobuf:"varint,8,opt,name=verify_ssl_cert,json=verifySslCert,proto3" json:"verify_ssl_cert,omitempty"`
}

func (x *ObjectStorageEventSource_SQS) Reset() {
	*x = ObjectStorageEventSource_SQS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectStorageEventSource_SQS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectStorageEventSource_SQS) ProtoMessage() {}

func (x *ObjectStorageEventSource_SQS) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectStorageEventSource_SQS.ProtoReflect.Descriptor instead.
func (*ObjectStorageEventSource_SQS) Descriptor() ([]byte, []int) {
	return file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDescGZIP(), []int{8, 0}
}

func (x *ObjectStorageEventSource_SQS) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *ObjectStorageEventSource_SQS) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *ObjectStorageEventSource_SQS) GetAwsAccessKeyId() string {
	if x != nil {
		return x.AwsAccessKeyId
	}
	return ""
}

func (x *ObjectStorageEventSource_SQS) GetAwsSecretAccessKey() string {
	if x != nil {
		return x.AwsSecretAccessKey
	}
	return ""
}

func (x *ObjectStorageEventSource_SQS) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *ObjectStorageEventSource_SQS) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ObjectStorageEventSource_SQS) GetUseSsl() bool {
	if x != nil {
		return x.UseSsl
	}
	return false
}

func (x *ObjectStorageEventSource_SQS) GetVerifySslCert() bool {
	if x != nil {
		return x.VerifySslCert
	}
	return false
}

type ObjectStorageEventSource_SNS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ObjectStorageEventSource_SNS) Reset() {
	*x = ObjectStorageEventSource_SNS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectStorageEventSource_SNS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectStorageEventSource_SNS) ProtoMessage() {}

func (x *ObjectStorageEventSource_SNS) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectStorageEventSource_SNS.ProtoReflect.Descriptor instead.
func (*ObjectStorageEventSource_SNS) Descriptor() ([]byte, []int) {
	return file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDescGZIP(), []int{8, 1}
}

type ObjectStorageEventSource_PubSub struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ObjectStorageEventSource_PubSub) Reset() {
	*x = ObjectStorageEventSource_PubSub{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectStorageEventSource_PubSub) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectStorageEventSource_PubSub) ProtoMessage() {}

func (x *ObjectStorageEventSource_PubSub) ProtoReflect() protoreflect.Message {
	mi := &file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectStorageEventSource_PubSub.ProtoReflect.Descriptor instead.
func (*ObjectStorageEventSource_PubSub) Descriptor() ([]byte, []int) {
	return file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDescGZIP(), []int{8, 2}
}

var File_doublecloud_transfer_v1_endpoint_object_storage_proto protoreflect.FileDescriptor

var file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDesc = []byte{
	0x0a, 0x35, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2f, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xec, 0x01, 0x0a, 0x17, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x29, 0x0a, 0x11, 0x61, 0x77, 0x73, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x77,
	0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x15,
	0x61, 0x77, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x77, 0x73,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x73, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x73, 0x65, 0x53, 0x73, 0x6c, 0x12, 0x26, 0x0a, 0x0f,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x73, 0x73, 0x6c, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x73, 0x6c,
	0x43, 0x65, 0x72, 0x74, 0x22, 0x43, 0x0a, 0x1d, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x6e, 0x79, 0x5f, 0x61, 0x73, 0x5f,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x6e,
	0x79, 0x41, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0xc3, 0x05, 0x0a, 0x13, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x67, 0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x42,
	0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x52, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6c, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c,
	0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f,
	0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x5f, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x5d, 0x0a, 0x0f, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x34, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x52, 0x0e, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x45, 0x6e,
	0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x59, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x64, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x6c, 0x0a, 0x11, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x64,
	0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x10, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0xa3, 0x02, 0x0a, 0x15, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x29, 0x0a, 0x11, 0x61, 0x77, 0x73, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x77,
	0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x15,
	0x61, 0x77, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x77, 0x73,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x73, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x73, 0x65, 0x53, 0x73, 0x6c, 0x12, 0x26, 0x0a,
	0x0f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x73, 0x73, 0x6c, 0x5f, 0x63, 0x65, 0x72, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x73,
	0x6c, 0x43, 0x65, 0x72, 0x74, 0x22, 0xe7, 0x0f, 0x0a, 0x19, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x12, 0x53, 0x0a, 0x03, 0x63, 0x73, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3f, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e, 0x43, 0x73,
	0x76, 0x48, 0x00, 0x52, 0x03, 0x63, 0x73, 0x76, 0x12, 0x5f, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x71,
	0x75, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x64, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x71, 0x75, 0x65, 0x74, 0x48, 0x00,
	0x52, 0x07, 0x70, 0x61, 0x72, 0x71, 0x75, 0x65, 0x74, 0x12, 0x56, 0x0a, 0x04, 0x61, 0x76, 0x72,
	0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x2e, 0x41, 0x76, 0x72, 0x6f, 0x48, 0x00, 0x52, 0x04, 0x61, 0x76, 0x72,
	0x6f, 0x12, 0x59, 0x0a, 0x05, 0x6a, 0x73, 0x6f, 0x6e, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x41, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e, 0x4a, 0x73,
	0x6f, 0x6e, 0x6c, 0x48, 0x00, 0x52, 0x05, 0x6a, 0x73, 0x6f, 0x6e, 0x6c, 0x12, 0x45, 0x0a, 0x05,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x64, 0x6f,
	0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x48, 0x00, 0x52, 0x05, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0xa3, 0x03, 0x0a, 0x05, 0x4a, 0x73, 0x6f, 0x6e, 0x6c, 0x12, 0x2c, 0x0a,
	0x12, 0x6e, 0x65, 0x77, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x6e, 0x65, 0x77, 0x6c, 0x69,
	0x6e, 0x65, 0x73, 0x49, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x95, 0x01, 0x0a, 0x19,
	0x75, 0x6e, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x59, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e, 0x4a, 0x73, 0x6f,
	0x6e, 0x6c, 0x2e, 0x55, 0x6e, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x52, 0x17, 0x75, 0x6e, 0x65, 0x78,
	0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x42, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0xb4, 0x01, 0x0a, 0x17, 0x55, 0x6e, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x12, 0x29,
	0x0a, 0x25, 0x55, 0x4e, 0x45, 0x58, 0x50, 0x45, 0x43, 0x54, 0x45, 0x44, 0x5f, 0x46, 0x49, 0x45,
	0x4c, 0x44, 0x5f, 0x42, 0x45, 0x48, 0x41, 0x56, 0x49, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x24, 0x0a, 0x20, 0x55, 0x4e, 0x45,
	0x58, 0x50, 0x45, 0x43, 0x54, 0x45, 0x44, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x42, 0x45,
	0x48, 0x41, 0x56, 0x49, 0x4f, 0x52, 0x5f, 0x49, 0x47, 0x4e, 0x4f, 0x52, 0x45, 0x10, 0x01, 0x12,
	0x23, 0x0a, 0x1f, 0x55, 0x4e, 0x45, 0x58, 0x50, 0x45, 0x43, 0x54, 0x45, 0x44, 0x5f, 0x46, 0x49,
	0x45, 0x4c, 0x44, 0x5f, 0x42, 0x45, 0x48, 0x41, 0x56, 0x49, 0x4f, 0x52, 0x5f, 0x49, 0x4e, 0x46,
	0x45, 0x52, 0x10, 0x02, 0x12, 0x23, 0x0a, 0x1f, 0x55, 0x4e, 0x45, 0x58, 0x50, 0x45, 0x43, 0x54,
	0x45, 0x44, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x42, 0x45, 0x48, 0x41, 0x56, 0x49, 0x4f,
	0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x1a, 0xd6, 0x08, 0x0a, 0x03, 0x43, 0x73,
	0x76, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x12, 0x1f,
	0x0a, 0x0b, 0x65, 0x73, 0x63, 0x61, 0x70, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x73, 0x63, 0x61, 0x70, 0x65, 0x43, 0x68, 0x61, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x6f, 0x75, 0x62, 0x6c, 0x65, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x2c,
	0x0a, 0x12, 0x6e, 0x65, 0x77, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x6e, 0x65, 0x77, 0x6c,
	0x69, 0x6e, 0x65, 0x73, 0x49, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x7a, 0x0a, 0x10, 0x61,
	0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x2e, 0x43, 0x73, 0x76, 0x2e, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x86, 0x01, 0x0a, 0x12, 0x61, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x57, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x2e, 0x43, 0x73, 0x76, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x11, 0x61,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x1a, 0xc0, 0x01, 0x0a, 0x0f, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x72, 0x6f, 0x77,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x6b, 0x69, 0x70, 0x52, 0x6f, 0x77,
	0x73, 0x12, 0x31, 0x0a, 0x15, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x72, 0x6f, 0x77, 0x73, 0x5f, 0x61,
	0x66, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x12, 0x73, 0x6b, 0x69, 0x70, 0x52, 0x6f, 0x77, 0x73, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x19, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x1a, 0x9c, 0x03, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x75, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x75, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x75, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x5f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x63,
	0x69, 0x6d, 0x61, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x13, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x73, 0x5f, 0x63, 0x61, 0x6e, 0x5f, 0x62, 0x65, 0x5f, 0x6e, 0x75, 0x6c, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x43,
	0x61, 0x6e, 0x42, 0x65, 0x4e, 0x75, 0x6c, 0x6c, 0x12, 0x3a, 0x0a, 0x1a, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x63, 0x61, 0x6e, 0x5f, 0x62,
	0x65, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x43, 0x61, 0x6e, 0x42, 0x65,
	0x4e, 0x75, 0x6c, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x36, 0x0a,
	0x17, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x5f, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x50, 0x61, 0x72, 0x73, 0x65,
	0x72, 0x73, 0x1a, 0x06, 0x0a, 0x04, 0x41, 0x76, 0x72, 0x6f, 0x1a, 0x09, 0x0a, 0x07, 0x50, 0x61,
	0x72, 0x71, 0x75, 0x65, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22,
	0xa4, 0x01, 0x0a, 0x17, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x2e, 0x0a, 0x05, 0x69,
	0x6e, 0x66, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x12, 0x4f, 0x0a, 0x0b, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x48, 0x00,
	0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x42, 0x08, 0x0a, 0x06,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x8a, 0x01, 0x0a, 0x18, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x61,
	0x64, 0x64, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x61, 0x64, 0x64, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43,
	0x6f, 0x6c, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x23, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64, 0x76, 0x61, 0x6e,
	0x63, 0x65, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x5c, 0x0a, 0x0d, 0x75,
	0x6e, 0x70, 0x61, 0x72, 0x73, 0x65, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x37, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x55, 0x6e, 0x70, 0x61, 0x72, 0x73, 0x65, 0x64, 0x52, 0x0c, 0x75, 0x6e, 0x70,
	0x61, 0x72, 0x73, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0xd0, 0x04, 0x0a, 0x18, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x03, 0x73, 0x71, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x53, 0x51, 0x53, 0x48, 0x00, 0x52, 0x03, 0x73, 0x71, 0x73, 0x12, 0x52, 0x0a, 0x03, 0x73, 0x6e,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x53, 0x4e, 0x53, 0x48, 0x00, 0x52, 0x03, 0x73, 0x6e, 0x73, 0x12, 0x5c,
	0x0a, 0x07, 0x70, 0x75, 0x62, 0x5f, 0x73, 0x75, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x41, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x50, 0x75, 0x62, 0x53,
	0x75, 0x62, 0x48, 0x00, 0x52, 0x06, 0x70, 0x75, 0x62, 0x53, 0x75, 0x62, 0x1a, 0x92, 0x02, 0x0a,
	0x03, 0x53, 0x51, 0x53, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29,
	0x0a, 0x11, 0x61, 0x77, 0x73, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x77, 0x73, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x15, 0x61, 0x77, 0x73,
	0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x77, 0x73, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x73, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x75, 0x73, 0x65, 0x53, 0x73, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x5f, 0x73, 0x73, 0x6c, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x73, 0x6c, 0x43, 0x65, 0x72,
	0x74, 0x1a, 0x05, 0x0a, 0x03, 0x53, 0x4e, 0x53, 0x1a, 0x08, 0x0a, 0x06, 0x50, 0x75, 0x62, 0x53,
	0x75, 0x62, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xf4, 0x04, 0x0a,
	0x13, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x53, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x53, 0x0a, 0x06, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x64, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x74, 0x68, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x6e, 0x12, 0x5d, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x5e, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x12, 0x5d, 0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x72, 0x0a, 0x11, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x64, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x10, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2a, 0x56, 0x0a, 0x12, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x12, 0x24, 0x0a, 0x20, 0x4f, 0x42, 0x4a,
	0x45, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45,
	0x43, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x43, 0x4f, 0x4d, 0x50, 0x52, 0x45, 0x53, 0x53, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x5a, 0x49, 0x50, 0x10, 0x02, 0x2a, 0x90, 0x02, 0x0a, 0x20,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x12, 0x33, 0x0a, 0x2f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x41,
	0x47, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x2c, 0x0a, 0x28, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f,
	0x53, 0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x49, 0x5a,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x4a, 0x53, 0x4f,
	0x4e, 0x10, 0x01, 0x12, 0x2b, 0x0a, 0x27, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x53, 0x54,
	0x4f, 0x52, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x43, 0x53, 0x56, 0x10, 0x02,
	0x12, 0x2b, 0x0a, 0x27, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x41,
	0x47, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x52, 0x41, 0x57, 0x10, 0x03, 0x12, 0x2f, 0x0a,
	0x2b, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x5f,
	0x53, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x4f,
	0x52, 0x4d, 0x41, 0x54, 0x5f, 0x50, 0x41, 0x52, 0x51, 0x55, 0x45, 0x54, 0x10, 0x04, 0x2a, 0xab,
	0x01, 0x0a, 0x15, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x55, 0x6e, 0x70, 0x61, 0x72, 0x73, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x23, 0x4f, 0x42, 0x4a, 0x45,
	0x43, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x4e, 0x50, 0x41, 0x52,
	0x53, 0x45, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x21, 0x0a, 0x1d, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52,
	0x41, 0x47, 0x45, 0x5f, 0x55, 0x4e, 0x50, 0x41, 0x52, 0x53, 0x45, 0x44, 0x5f, 0x52, 0x45, 0x54,
	0x52, 0x59, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x53,
	0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x4e, 0x50, 0x41, 0x52, 0x53, 0x45, 0x44, 0x5f,
	0x46, 0x41, 0x49, 0x4c, 0x10, 0x02, 0x12, 0x24, 0x0a, 0x20, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54,
	0x5f, 0x53, 0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x4e, 0x50, 0x41, 0x52, 0x53, 0x45,
	0x44, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x49, 0x4e, 0x55, 0x45, 0x10, 0x03, 0x42, 0x4e, 0x5a, 0x4c,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x3b, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDescOnce sync.Once
	file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDescData = file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDesc
)

func file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDescGZIP() []byte {
	file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDescOnce.Do(func() {
		file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDescData = protoimpl.X.CompressGZIP(file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDescData)
	})
	return file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDescData
}

var file_doublecloud_transfer_v1_endpoint_object_storage_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_doublecloud_transfer_v1_endpoint_object_storage_proto_goTypes = []interface{}{
	(ObjectStorageCodec)(0),                                       // 0: doublecloud.transfer.v1.endpoint.ObjectStorageCodec
	(ObjectStorageSerializationFormat)(0),                         // 1: doublecloud.transfer.v1.endpoint.ObjectStorageSerializationFormat
	(ObjectStorageUnparsed)(0),                                    // 2: doublecloud.transfer.v1.endpoint.ObjectStorageUnparsed
	(ObjectStorageReaderFormat_Jsonl_UnexpectedFieldBehavior)(0),  // 3: doublecloud.transfer.v1.endpoint.ObjectStorageReaderFormat.Jsonl.UnexpectedFieldBehavior
	(*ObjectStorageConnection)(nil),                               // 4: doublecloud.transfer.v1.endpoint.ObjectStorageConnection
	(*ObjectStorageSerializerConfig)(nil),                         // 5: doublecloud.transfer.v1.endpoint.ObjectStorageSerializerConfig
	(*ObjectStorageTarget)(nil),                                   // 6: doublecloud.transfer.v1.endpoint.ObjectStorageTarget
	(*ObjectStorageProvider)(nil),                                 // 7: doublecloud.transfer.v1.endpoint.ObjectStorageProvider
	(*ObjectStorageReaderFormat)(nil),                             // 8: doublecloud.transfer.v1.endpoint.ObjectStorageReaderFormat
	(*ObjectStorageDataSchema)(nil),                               // 9: doublecloud.transfer.v1.endpoint.ObjectStorageDataSchema
	(*ObjectStorageResultTable)(nil),                              // 10: doublecloud.transfer.v1.endpoint.ObjectStorageResultTable
	(*ObjectStorageSourceAdvancedSettings)(nil),                   // 11: doublecloud.transfer.v1.endpoint.ObjectStorageSourceAdvancedSettings
	(*ObjectStorageEventSource)(nil),                              // 12: doublecloud.transfer.v1.endpoint.ObjectStorageEventSource
	(*ObjectStorageSource)(nil),                                   // 13: doublecloud.transfer.v1.endpoint.ObjectStorageSource
	(*ObjectStorageReaderFormat_Jsonl)(nil),                       // 14: doublecloud.transfer.v1.endpoint.ObjectStorageReaderFormat.Jsonl
	(*ObjectStorageReaderFormat_Csv)(nil),                         // 15: doublecloud.transfer.v1.endpoint.ObjectStorageReaderFormat.Csv
	(*ObjectStorageReaderFormat_Avro)(nil),                        // 16: doublecloud.transfer.v1.endpoint.ObjectStorageReaderFormat.Avro
	(*ObjectStorageReaderFormat_Parquet)(nil),                     // 17: doublecloud.transfer.v1.endpoint.ObjectStorageReaderFormat.Parquet
	(*ObjectStorageReaderFormat_Csv_AdvancedOptions)(nil),         // 18: doublecloud.transfer.v1.endpoint.ObjectStorageReaderFormat.Csv.AdvancedOptions
	(*ObjectStorageReaderFormat_Csv_AdditionalReaderOptions)(nil), // 19: doublecloud.transfer.v1.endpoint.ObjectStorageReaderFormat.Csv.AdditionalReaderOptions
	(*ObjectStorageEventSource_SQS)(nil),                          // 20: doublecloud.transfer.v1.endpoint.ObjectStorageEventSource.SQS
	(*ObjectStorageEventSource_SNS)(nil),                          // 21: doublecloud.transfer.v1.endpoint.ObjectStorageEventSource.SNS
	(*ObjectStorageEventSource_PubSub)(nil),                       // 22: doublecloud.transfer.v1.endpoint.ObjectStorageEventSource.PubSub
	(*ProtoParser)(nil),                                           // 23: doublecloud.transfer.v1.endpoint.ProtoParser
	(*emptypb.Empty)(nil),                                         // 24: google.protobuf.Empty
	(*DataSchema)(nil),                                            // 25: doublecloud.transfer.v1.endpoint.DataSchema
}
var file_doublecloud_transfer_v1_endpoint_object_storage_proto_depIdxs = []int32{
	1,  // 0: doublecloud.transfer.v1.endpoint.ObjectStorageTarget.output_format:type_name -> doublecloud.transfer.v1.endpoint.ObjectStorageSerializationFormat
	0,  // 1: doublecloud.transfer.v1.endpoint.ObjectStorageTarget.output_encoding:type_name -> doublecloud.transfer.v1.endpoint.ObjectStorageCodec
	4,  // 2: doublecloud.transfer.v1.endpoint.ObjectStorageTarget.connection:type_name -> doublecloud.transfer.v1.endpoint.ObjectStorageConnection
	5,  // 3: doublecloud.transfer.v1.endpoint.ObjectStorageTarget.serializer_config:type_name -> doublecloud.transfer.v1.endpoint.ObjectStorageSerializerConfig
	15, // 4: doublecloud.transfer.v1.endpoint.ObjectStorageReaderFormat.csv:type_name -> doublecloud.transfer.v1.endpoint.ObjectStorageReaderFormat.Csv
	17, // 5: doublecloud.transfer.v1.endpoint.ObjectStorageReaderFormat.parquet:type_name -> doublecloud.transfer.v1.endpoint.ObjectStorageReaderFormat.Parquet
	16, // 6: doublecloud.transfer.v1.endpoint.ObjectStorageReaderFormat.avro:type_name -> doublecloud.transfer.v1.endpoint.ObjectStorageReaderFormat.Avro
	14, // 7: doublecloud.transfer.v1.endpoint.ObjectStorageReaderFormat.jsonl:type_name -> doublecloud.transfer.v1.endpoint.ObjectStorageReaderFormat.Jsonl
	23, // 8: doublecloud.transfer.v1.endpoint.ObjectStorageReaderFormat.proto:type_name -> doublecloud.transfer.v1.endpoint.ProtoParser
	24, // 9: doublecloud.transfer.v1.endpoint.ObjectStorageDataSchema.infer:type_name -> google.protobuf.Empty
	25, // 10: doublecloud.transfer.v1.endpoint.ObjectStorageDataSchema.data_schema:type_name -> doublecloud.transfer.v1.endpoint.DataSchema
	2,  // 11: doublecloud.transfer.v1.endpoint.ObjectStorageSourceAdvancedSettings.unparsed_mode:type_name -> doublecloud.transfer.v1.endpoint.ObjectStorageUnparsed
	20, // 12: doublecloud.transfer.v1.endpoint.ObjectStorageEventSource.sqs:type_name -> doublecloud.transfer.v1.endpoint.ObjectStorageEventSource.SQS
	21, // 13: doublecloud.transfer.v1.endpoint.ObjectStorageEventSource.sns:type_name -> doublecloud.transfer.v1.endpoint.ObjectStorageEventSource.SNS
	22, // 14: doublecloud.transfer.v1.endpoint.ObjectStorageEventSource.pub_sub:type_name -> doublecloud.transfer.v1.endpoint.ObjectStorageEventSource.PubSub
	7,  // 15: doublecloud.transfer.v1.endpoint.ObjectStorageSource.provider:type_name -> doublecloud.transfer.v1.endpoint.ObjectStorageProvider
	8,  // 16: doublecloud.transfer.v1.endpoint.ObjectStorageSource.format:type_name -> doublecloud.transfer.v1.endpoint.ObjectStorageReaderFormat
	10, // 17: doublecloud.transfer.v1.endpoint.ObjectStorageSource.result_table:type_name -> doublecloud.transfer.v1.endpoint.ObjectStorageResultTable
	9,  // 18: doublecloud.transfer.v1.endpoint.ObjectStorageSource.result_schema:type_name -> doublecloud.transfer.v1.endpoint.ObjectStorageDataSchema
	12, // 19: doublecloud.transfer.v1.endpoint.ObjectStorageSource.event_source:type_name -> doublecloud.transfer.v1.endpoint.ObjectStorageEventSource
	11, // 20: doublecloud.transfer.v1.endpoint.ObjectStorageSource.advanced_settings:type_name -> doublecloud.transfer.v1.endpoint.ObjectStorageSourceAdvancedSettings
	3,  // 21: doublecloud.transfer.v1.endpoint.ObjectStorageReaderFormat.Jsonl.unexpected_field_behavior:type_name -> doublecloud.transfer.v1.endpoint.ObjectStorageReaderFormat.Jsonl.UnexpectedFieldBehavior
	18, // 22: doublecloud.transfer.v1.endpoint.ObjectStorageReaderFormat.Csv.advanced_options:type_name -> doublecloud.transfer.v1.endpoint.ObjectStorageReaderFormat.Csv.AdvancedOptions
	19, // 23: doublecloud.transfer.v1.endpoint.ObjectStorageReaderFormat.Csv.additional_options:type_name -> doublecloud.transfer.v1.endpoint.ObjectStorageReaderFormat.Csv.AdditionalReaderOptions
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_doublecloud_transfer_v1_endpoint_object_storage_proto_init() }
func file_doublecloud_transfer_v1_endpoint_object_storage_proto_init() {
	if File_doublecloud_transfer_v1_endpoint_object_storage_proto != nil {
		return
	}
	file_doublecloud_transfer_v1_endpoint_common_proto_init()
	file_doublecloud_transfer_v1_endpoint_parsers_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectStorageConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectStorageSerializerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectStorageTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectStorageProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectStorageReaderFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectStorageDataSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectStorageResultTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectStorageSourceAdvancedSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectStorageEventSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectStorageSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectStorageReaderFormat_Jsonl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectStorageReaderFormat_Csv); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectStorageReaderFormat_Avro); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectStorageReaderFormat_Parquet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectStorageReaderFormat_Csv_AdvancedOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectStorageReaderFormat_Csv_AdditionalReaderOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectStorageEventSource_SQS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectStorageEventSource_SNS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectStorageEventSource_PubSub); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*ObjectStorageReaderFormat_Csv_)(nil),
		(*ObjectStorageReaderFormat_Parquet_)(nil),
		(*ObjectStorageReaderFormat_Avro_)(nil),
		(*ObjectStorageReaderFormat_Jsonl_)(nil),
		(*ObjectStorageReaderFormat_Proto)(nil),
	}
	file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*ObjectStorageDataSchema_Infer)(nil),
		(*ObjectStorageDataSchema_DataSchema)(nil),
	}
	file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*ObjectStorageEventSource_Sqs)(nil),
		(*ObjectStorageEventSource_Sns)(nil),
		(*ObjectStorageEventSource_PubSub_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_doublecloud_transfer_v1_endpoint_object_storage_proto_goTypes,
		DependencyIndexes: file_doublecloud_transfer_v1_endpoint_object_storage_proto_depIdxs,
		EnumInfos:         file_doublecloud_transfer_v1_endpoint_object_storage_proto_enumTypes,
		MessageInfos:      file_doublecloud_transfer_v1_endpoint_object_storage_proto_msgTypes,
	}.Build()
	File_doublecloud_transfer_v1_endpoint_object_storage_proto = out.File
	file_doublecloud_transfer_v1_endpoint_object_storage_proto_rawDesc = nil
	file_doublecloud_transfer_v1_endpoint_object_storage_proto_goTypes = nil
	file_doublecloud_transfer_v1_endpoint_object_storage_proto_depIdxs = nil
}
